.horizontal-container {
  display: flex;
  align-items: center;
  width: 100%; /* Take full width of parent */
  min-width: 0; /* CRITICAL for nested flex items */
}

/* Text element with ellipsis */
.option-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex: 1; /* shorthand for flex-grow: 1, flex-shrink: 1, flex-basis: 0 */
  min-width: 0; /* CRITICAL - allows text truncation */
}

.disabled-icon {
//   color: rgba(0, 0, 0, 0.38); /* Material Design disabled color */
  /* or */
  color: #757575; /* Medium gray */
  /* or */
  opacity: 0.6;
}


//Added mat0-chip
::ng-deep .mat-mdc-standard-chip .mdc-evolution-chip__action--primary {
  padding-left: 5px !important;
  /* padding-right: 12px; */
}

::ng-deep .mdc-evolution-chip-set .mdc-evolution-chip {
  margin: 0% !important;
}

::ng-deep .mat-mdc-form-field-infix {
  --mat-form-field-filled-with-label-container-padding-bottom: 0px !important;
}

::ng-deep input.mat-mdc-chip-input {
  //flex: 1 0 150px;
  margin-left: 0px !important;
}


mat-chip-row[color="primary"] {
  background: transparent !important;
  background-color: transparent !important;
  border-radius: 6px;
  padding: 2px 2px;
  font-weight: 500;
  color: #333;
  transform: translateZ(0);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

/* Optional: Ensure the remove button icon is also white */
mat-chip-row[color="primary"] button[matChipRemove] mat-icon {
  color: red !important;
}


.checkbox-option {
  display: flex;
  /* Enable flex layout */
  align-items: center;
  /* Vertically center items */
  gap: 8px;
  /* Space between checkbox and text */
  width: 100%;
  /* Full width */
}

.checkbox-item {
  // margin-top: 4px;
  flex-shrink: 0;
}

/* Styles for the container of the checkbox and text */
/* Apply to the mat-option or parent container */
.mat-option {
  width: 100%; /* Ensure parent has defined width */
  max-width: 100%; /* Prevent overflow */
  overflow: hidden; /* Just in case */
}

/* Container for checkbox and text */
.horizontal-container {
  display: flex;
  align-items: center;
  width: 100%; /* Take full width of parent */
  min-width: 0; /* CRITICAL for nested flex items */
}

/* Text element with ellipsis */
.option-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex: 1; /* shorthand for flex-grow: 1, flex-shrink: 1, flex-basis: 0 */
  min-width: 0; /* CRITICAL - allows text truncation */
}

/* If using Angular Material checkbox */
.mat-checkbox {
  flex-shrink: 0; /* Prevent checkbox from shrinking */
  margin-right: 8px; /* Add some spacing */
}



::ng-deep .mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after {
  display: none
}

.multiSelected_autocomplete {
  padding: 0 12px;
}

::ng-deep .mat-mdc-chip-action-label {
  overflow: hidden !important;
}

::ng-deep .mdc-evolution-chip__text-label {
  display: inline-block !important;
  white-space: nowrap !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  max-width: 100% !important;
}

::ng-deep .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,
::ng-deep .mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,
::ng-deep .mat-mdc-standard-chip .mat-mdc-chip-action-label {
  overflow: hidden !important;
}


.single-line-chip-grid {
  white-space: nowrap; /* Ensures content stays on a single line */
  overflow: hidden;    /* Hides content that overflows the container */
  text-overflow: ellipsis; /* Displays an ellipsis (...) for clipped text */
  display: block;      /* Ensures the ellipsis works correctly with block-level display */
}

/* You might need to adjust the width of the input field within the chip grid
   to allow space for the ellipsis if it's too wide by default. */
.single-line-chip-grid input {
  width: 100%; /* Or set a specific max-width */
  box-sizing: border-box; /* Include padding and border in the element's total width */
}