"""Delegates a resolver to a remote schema."""
directive @delegate(
  """The path to the field on the remote schema."""
  path: String

  """The name of the schema to which this field shall be delegated to."""
  schema: String!
) on FIELD_DEFINITION

"""Annotates the original name of a type."""
directive @source(
  """The original name of the annotated type."""
  name: String!

  """The name of the schema to which this type belongs to."""
  schema: String!
) repeatable on OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | INTERFACE | UNION | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

type Query {
  queryBilling(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: billingFilterInput
    order: [billingSortInput!]
  ): QueryBillingConnection
  queryBillingSOT(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: billing_sotFilterInput
    order: [billing_sotSortInput!]
  ): QueryBillingSOTConnection
  queryTank(where: tankFilterInput, order: [tankSortInput!]): [tank!]!
  queryTankInfo(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tank_infoFilterInput
    order: [tank_infoSortInput!]
  ): QueryTankInfoConnection
  queryCodeValuesByType(codeValuesType: CodeValuesRequestInput!, where: code_valuesFilterInput, order: [code_valuesSortInput!]): [code_values!]!
  queryCodeValues(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: code_valuesFilterInput
    order: [code_valuesSortInput!]
  ): QueryCodeValuesConnection
  querySurveyDetail(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: survey_detailFilterInput
    order: [survey_detailSortInput!]
  ): QuerySurveyDetailConnection
  queryTransfer(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: transferFilterInput
    order: [transferSortInput!]
  ): QueryTransferConnection
  queryStoringOrder(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: storing_orderFilterInput
    order: [storing_orderSortInput!]
  ): QueryStoringOrderConnection
  queryStoringOrderById(id: String!): [storing_order!]!
  queryStoringOrderTank(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: storing_order_tankFilterInput
    order: [storing_order_tankSortInput!]
  ): QueryStoringOrderTankConnection
  queryStoringOrderTankCount(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: storing_order_tankFilterInput
    order: [storing_order_tankSortInput!]
  ): QueryStoringOrderTankCountConnection
  queryReleaseOrder(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: release_orderFilterInput
    order: [release_orderSortInput!]
  ): QueryReleaseOrderConnection
  queryReleaseOrderSOT(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: release_order_sotFilterInput
    order: [release_order_sotSortInput!]
  ): QueryReleaseOrderSOTConnection
  queryScheduling(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: schedulingFilterInput
    order: [schedulingSortInput!]
  ): QuerySchedulingConnection
  querySchedulingSOT(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: scheduling_sotFilterInput
    order: [scheduling_sotSortInput!]
  ): QuerySchedulingSOTConnection
  queryBooking(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: bookingFilterInput
    order: [bookingSortInput!]
  ): QueryBookingConnection
  queryInGates(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: in_gateFilterInput
    order: [in_gateSortInput!]
  ): QueryInGatesConnection
  queryInGatesCount(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: in_gateFilterInput
    order: [in_gateSortInput!]
  ): QueryInGatesCountConnection
  queryOutGates(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: out_gateFilterInput
    order: [out_gateSortInput!]
  ): QueryOutGatesConnection
  queryInGateSurvey(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: in_gate_surveyFilterInput
    order: [in_gate_surveySortInput!]
  ): QueryInGateSurveyConnection
  queryOutGateSurvey(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: out_gate_surveyFilterInput
    order: [out_gate_surveySortInput!]
  ): QueryOutGateSurveyConnection
  queryTemplateEstimation(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: template_estFilterInput
    order: [template_estSortInput!]
  ): QueryTemplateEstimationConnection
  queryCustomerCompany(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: customer_companyFilterInput
    order: [customer_companySortInput!]
  ): QueryCustomerCompanyConnection
  queryContactPerson(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: customer_company_contact_personFilterInput
    order: [customer_company_contact_personSortInput!]
  ): QueryContactPersonConnection
  queryCurrency(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: currencyFilterInput
    order: [currencySortInput!]
  ): QueryCurrencyConnection
  queryPackageDepot(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_depotFilterInput
    order: [package_depotSortInput!]
  ): QueryPackageDepotConnection
  queryPackageCleaning(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: customer_company_cleaning_categoryFilterInput
    order: [customer_company_cleaning_categorySortInput!]
  ): QueryPackageCleaningConnection
  queryPackageLabour(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_labourFilterInput
    order: [package_labourSortInput!]
  ): QueryPackageLabourConnection
  queryPackageResidue(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_residueFilterInput
    order: [package_residueSortInput!]
  ): QueryPackageResidueConnection
  queryPackageBuffer(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_bufferFilterInput
    order: [package_bufferSortInput!]
  ): QueryPackageBufferConnection
  queryPackageRepair(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_repairFilterInput
    order: [package_repairSortInput!]
  ): QueryPackageRepairConnection
  queryPackageSteaming(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: package_steamingFilterInput
    order: [package_steamingSortInput!]
  ): QueryPackageSteamingConnection
  queryCleaningMethod(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: cleaning_methodFilterInput
    order: [cleaning_methodSortInput!]
  ): QueryCleaningMethodConnection
  queryCleaningCategory(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: cleaning_categoryFilterInput
    order: [cleaning_categorySortInput!]
  ): QueryCleaningCategoryConnection
  queryJobOrder(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: job_orderFilterInput
    order: [job_orderSortInput!]
  ): QueryJobOrderConnection
  queryTeams(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: teamFilterInput
    order: [teamSortInput!]
  ): QueryTeamsConnection
  queryUsers(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: aspnetusersFilterInput
    order: [aspnetusersSortInput!]
  ): QueryUsersConnection
  queryRepair(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: repairFilterInput
    order: [repairSortInput!]
  ): QueryRepairConnection
  queryResidue(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: residueFilterInput
    order: [residueSortInput!]
  ): QueryResidueConnection
  queryCleaning(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: cleaningFilterInput
    order: [cleaningSortInput!]
  ): QueryCleaningConnection
  querySteaming(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: steamingFilterInput
    order: [steamingSortInput!]
  ): QuerySteamingConnection
  querySteamingTemp(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: steaming_tempFilterInput
    order: [steaming_tempSortInput!]
  ): QuerySteamingTempConnection
  queryTariffDepot(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_depotFilterInput
    order: [tariff_depotSortInput!]
  ): QueryTariffDepotConnection
  queryTariffCleaning(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_cleaningFilterInput
    order: [tariff_cleaningSortInput!]
  ): QueryTariffCleaningConnection
  queryTariffLabour(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_labourFilterInput
    order: [tariff_labourSortInput!]
  ): QueryTariffLabourConnection
  queryTariffResidue(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_residueFilterInput
    order: [tariff_residueSortInput!]
  ): QueryTariffResidueConnection
  queryTariffBuffer(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_bufferFilterInput
    order: [tariff_bufferSortInput!]
  ): QueryTariffBufferConnection
  queryTariffRepair(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_repairFilterInput
    order: [tariff_repairSortInput!]
  ): QueryTariffRepairConnection
  queryTariffSteaming(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: tariff_steamingFilterInput
    order: [tariff_steamingSortInput!]
  ): QueryTariffSteamingConnection
  querySteamingExclusive(
    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    where: steaming_exclusiveFilterInput
    order: [steaming_exclusiveSortInput!]
  ): QuerySteamingExclusiveConnection
  queryUNClassByNo(unNo: String!, where: un_numberFilterInput, order: [un_numberSortInput!]): [un_number]!
  queryDistinctClassNo: [String]!
  queryDistinctPartName(groupName: String, subgroupName: String): [String]!
  queryDistinctDimension(partName: String): [String]!
  queryDistinctLength(partName: String, dimension: String): [LengthWithUnit!]!
}

type Mutation {
  addBilling(newBilling: billingInput!, billingEstimateRequests: [BillingEstimateRequestInput!]!): Int!
  updateBilling(updateBilling: billingInput, billingEstimateRequests: [BillingEstimateRequestInput!]!): Int!
  updateBillingInvoices(billingInvoices: [billingInput!]!): Int!
  updateBillingSOT(updateBillingSOT: billing_sotInput!): Int!
  updateTankPurpose(tankPurpose: TankPurposeRequestInput!): Int!
  addSurveyDetail(surveyDetail: survey_detailInput!, periodicTest: PeriodicTestRequestInput): Int!
  updateSurveyDetail(surveyDetail: survey_detailInput!): Int!
  updateTransfer(transfer: transferInput!): Int!
  addStoringOrder(so: StoringOrderRequestInput!, soTanks: [StoringOrderTankRequestInput!]!): Int!
  updateStoringOrder(so: StoringOrderRequestInput!, soTanks: [StoringOrderTankRequestInput!]!): Int!
  cancelStoringOrder(so: [StoringOrderRequestInput!]!): Int!
  deleteStoringOrder(soGuids: [String!]!): Int!
  updateStoringOrderTank(soTank: StoringOrderTankRequestInput!): Int!
  addScheduling(scheduling: SchedulingRequestInput!, scheduling_SotList: [SchedulingSOTRequestInput!]!): Int!
  updateScheduling(scheduling: SchedulingRequestInput!, scheduling_SotList: [SchedulingSOTRequestInput!]!): Int!
  deleteScheduling(schedulingGuids: [String!]!): Int!
  deleteSchedulingSOT(schedulingSOTGuids: [String!]!): Int!
  addReleaseOrder(releaseOrder: ReleaseOrderRequestInput!, ro_SotList: [ReleaseOrderSOTRequestInput!]!): Int!
  updateReleaseOrder(releaseOrder: ReleaseOrderRequestInput!, ro_SotList: [ReleaseOrderSOTRequestInput!]!): Int!
  cancelReleaseOrder(releaseOrderList: [ReleaseOrderRequestInput!]!): Int!
  addBooking(booking: BookingRequestInput!): Int!
  updateBooking(bookingList: [BookingRequestInput!]!): Int!
  cancelBooking(bookingList: [BookingRequestInput!]!): Int!
  deleteBooking(bkGuids: [String!]!): Int!
  addInGate(inGate: in_gateInput!): Int!
  updateInGate(inGate: in_gateInput!): Int!
  deleteInGate(inGate_guid: String!): Int!
  addOutGate(outGate: out_gateInput!, releaseOrder: release_orderInput!): Record!
  updateOutGate(outGate: out_gateInput!, releaseOrder: release_orderInput!): Int!
  addInGateSurvey(inGateSurveyRequest: InGateSurveyRequestInput!, inGateRequest: in_gateInput!): Record!
  updateInGateSurvey(inGateSurveyRequest: InGateSurveyRequestInput!, inGateRequest: in_gateInput!): Int!
  deleteInGateSurvey(igSurvey_guid: String!): Int!
  publishIngateSurvey(inGateRequest: in_gateInput!): Int!
  addOutGateSurvey(outGateSurveyRequest: OutGateSurveyRequestInput!, outGateRequest: OutGateRequestInput!): Record!
  updateOutGateSurvey(outGateSurveyRequest: OutGateSurveyRequestInput!, outGateRequest: OutGateRequestInput!): Int!
  deleteOutGateSurvey(ogSurvey_guid: String!): Int!
  publishOutgateSurvey(outGate_guid: String!): Int!
  addTemplateEstimation(newTemplateEstimate: template_estInput!): Int!
  updateTemplateEstimation(editTemplateEsimate: template_estInput!): Int!
  addCustomerCompany(customer: CustomerRequestInput!, contactPersons: [customer_company_contact_personInput], billingBranches: [BillingBranchRequestInput]): Int!
  updateCustomerCompany(customer: CustomerRequestInput!, contactPersons: [customer_company_contact_personInput], billingBranches: [BillingBranchRequestInput]): Int!
  deleteCustomerCompany(customerGuids: [String!]!): Int!
  updatePackageCleans(updatePackageClean_guids: [String!]!, remarks: String!, adjusted_price: Float!): Int!
  updatePackageClean(updatePackageClean: customer_company_cleaning_categoryInput!): Int!
  updatePackageDepots(updatePackageDepot_guids: [String!]!, free_storage: Int!, lolo_cost: Float!, preinspection_cost: Float!, storage_cost: Float!, gate_in_cost: Float!, gate_out_cost: Float!, remarks: String!, storage_cal_cv: String!): Int!
  updatePackageDepot(updatePackageDepot: package_depotInput!): Int!
  deletePackageDepot(deletePackageDepot_guids: [String!]!): Int!
  updatePackageLabours(updatePackageLabour_guids: [String!]!, cost: Float!, remarks: String!): Int!
  updatePackageLabour(updatePackageLabour: package_labourInput!): Int!
  deletePackageLabour(deletePackageLabour_guids: [String!]!): Int!
  updatePackageResidues(updatePackageResidue_guids: [String!]!, cost: Float!, remarks: String!): Int!
  updatePackageResidue(updatePackageResidue: package_residueInput!): Int!
  deletePackageResidue(deletePackageResidue_guids: [String!]!): Int!
  updatePackageBuffers(updatePackageBuffer_guids: [String!]!, cost: Float!, remarks: String!): Int!
  updatePackageBuffer(updatePackageBuffer: package_bufferInput!): Int!
  deletePackageBuffer(deletePackageBuffer_guids: [String!]!): Int!
  updatePackageRepairs(updatePackageRepair_guids: [String!]!, material_cost: Float!, labour_hour: Float!, remarks: String!): Int!
  updatePackageRepair(updatePackageRepair: package_repairInput!): Int!
  deletePackageRepair(deletePackageRepair_guids: [String!]!): Int!
  updatePackageRepair_MaterialCost(group_name_cv: String, subgroup_name_cv: String, part_name: String, dimension: String, length: Int, tariff_repair_guid: String, customer_company_guids: [String!], material_cost_percentage: Float!, labour_hour_percentage: Float!): Int!
  updatePackageSteamings(updatePackageSteaming_guids: [String!]!, cost: Float!, labour: Float!, remarks: String!): Int!
  updatePackageSteaming(updatePackageSteaming: package_steamingInput!): Int!
  deletePackageSteaming(deletePackageSteaming_guids: [String!]!): Int!
  addSteamingExclusive(newSteamingExclusive: [steaming_exclusiveInput!]!): Int!
  updateSteamingExclusive(updateSteamingExclusive: steaming_exclusiveInput!): Int!
  deleteSteamingExclusive(deleteSteamExclusive_guids: [String!]!): Int!
  addCleaningMethod(newCleanMethod: cleaning_methodInput!): Int!
  updateCleaningMethod(updateCleanMethod: cleaning_methodInput!): Int!
  deleteCleaningMethod(deleteCleanMethod_guids: [String!]!): Int!
  addCleaningCategory(newCleanCategory: cleaning_categoryInput!): Int!
  updateCleaningCategory(updateCleanCategory: cleaning_categoryInput!): Int!
  deleteCleaningCategory(deleteCleanCategory_guids: [String!]!): Int!
  syncUpCustomerCompaniesWithCleaningCategories: Int!
  assignJobOrder(jobOrderRequest: [JobOrderRequestInput!]!): Int!
  updateJobOrder(jobOrderRequest: [UpdateJobOrderRequestInput!]!): Int!
  completeJobOrder(jobOrderRequest: [UpdateJobOrderRequestInput!]!): Int!
  deleteJobOrder(jobOrderGuid: [String!]!): Int!
  startJobTimer(timeTable: [time_tableInput!]!, processGuid: String): Int!
  stopJobTimer(timeTable: [time_tableInput!]!): Int!
  addRepair(repair: repairInput!, customerCompany: customer_companyInput): Int!
  approveRepair(repair: repairInput!): Int!
  updateRepair(repair: repairInput!, customerCompany: customer_companyInput): Int!
  rollbackRepair(repair: [RepairRequestInput!]!): Int!
  abortRepair(repJobOrder: RepJobOrderRequestInput!): Int!
  updateRepairStatus(repair: RepairStatusRequestInput!): Int!
  completeQCRepair(repJobOrder: [RepJobOrderRequestInput!]!): Int!
  rollbackQCRepair(repJobOrder: [RepJobOrderRequestInput!]!): Int!
  overwriteQCRepair(repJobOrder: [RepJobOrderRequestInput!]!): Int!
  rollbackCompletedRepair(repJobOrder: [RepJobOrderRequestInput!]!): Int!
  rollbackJobInProgressRepair(repJobOrder: [RepJobOrderRequestInput!]!): Int!
  addResidue(residue: residueInput!): Int!
  updateResidue(residue: residueInput!): Int!
  approveResidue(residue: residueInput!): Int!
  rollbackResidue(residue: [ResidueRequestInput!]!): Int!
  updateResidueStatus(residue: ResidueStatusRequestInput!): Int!
  abortResidue(residueJobOrder: ResJobOrderRequestInput!): Int!
  completeQCResidue(residueJobOrder: [ResJobOrderRequestInput!]!): Int!
  rollbackCompletedResidue(residueJobOrder: [ResJobOrderRequestInput!]!): Int!
  rollbackJobInProgressResidue(residueJobOrder: [ResJobOrderRequestInput!]!): Int!
  addCleaning(cleaning: cleaningInput!): Int!
  updateCleaning(cleaning: cleaningInput!): Int!
  abortCleaning(cleaningJobOrder: CleaningJobOrderInput!): Int!
  rollbackCompletedCleaning(cleaningJobOrder: CleaningJobOrderInput!): Int!
  rollbackJobInProgressCleaning(cleaningJobOrder: CleaningJobOrderInput!): Int!
  addSteaming(steaming: steamingInput!): Int!
  approveSteaming(steaming: steamingInput!): Int!
  updateSteaming(steaming: steamingInput!): Int!
  rollbackSteaming(steaming: [SteamingRequestInput!]!): Int!
  recordSteamingTemp(steamingTemp: steaming_tempInput!, action: String!, requiredTemp: Float!): Int!
  updateSteamingStatus(steaming: SteamingStatusRequestInput!): Int!
  abortSteaming(steamingJobOrder: SteamJobOrderRequestInput!): Int!
  completeQCSteaming(steamingJobOrder: [SteamJobOrderRequestInput!]!): Int!
  rollbackJobInProgressSteaming(steamingJobOrder: [SteamJobOrderRequestInput!]!): Int!
  rollbackCompletedSteaming(steamingJobOrder: [SteamJobOrderRequestInput!]!): Int!
  addTariffDepot(newTariffDepot: tariff_depotInput!): Int!
  updateTariffDepot(updateTariffDepot: tariff_depotInput!): Int!
  deleteTariffDepot(deleteTariffDepot_guids: [String!]!): Int!
  addTariffCleaning(newTariffClean: tariff_cleaningInput!): Int!
  updateTariffClean(updateTariffClean: tariff_cleaningInput!): Int!
  deleteTariffClean(deleteTariffClean_guids: [String!]!): Int!
  addTariffBuffer(newTariffBuffer: tariff_bufferInput!): Int!
  updateTariffBuffer(updateTariffBuffer: tariff_bufferInput!): Int!
  deleteTariffBuffer(deleteTariffBuffer_guids: [String!]!): Int!
  syncUpPackageLabours: Int!
  addTariffLabour(newTariffLabour: tariff_labourInput!): Int!
  updateTariffLabour(updateTariffLabour: tariff_labourInput!): Int!
  deleteTariffLabour(deleteTariffLabour_guids: [String!]!): Int!
  addTariffResidue(newTariffResidue: tariff_residueInput!): Int!
  updateTariffResidue(updateTariffResidue: tariff_residueInput!): Int!
  deleteTariffResidue(deleteTariffResidue_guids: [String!]!): Int!
  addTariffRepair(newTariffRepair: tariff_repairInput!): Int!
  updateTariffRepair(updateTariffRepair: tariff_repairInput!): Int!
  updateTariffRepairs(updatedTariffRepair_guids: [String!]!, group_name_cv: String!, subgroup_name_cv: String!, dimension: String!, height_diameter: Float!, height_diameter_unit_cv: String!, width_diameter: Float!, width_diameter_unit_cv: String!, labour_hour: Float!, length: Float!, length_unit_cv: String!, material_cost: Float!, part_name: String!, alias: String!, thickness: Float!, thickness_unit_cv: String!, remarks: String!): Int!
  updateTariffRepair_MaterialCost(group_name_cv: String, subgroup_name_cv: String, part_name: String, dimension: String, length: Int, guid: String, material_cost_percentage: Float!, labour_hour_percentage: Float!): Int!
  calculateMaterialCostRoundedUp(materialCost: Float!, materialCostPercentage: Float!): Float!
  deleteTariffRepair(deleteTariffRepair_guids: [String!]!): Int!
  addTariffSteaming(newTariffSteaming: tariff_steamingInput!): Int!
  updateTariffSteaming(updateTariffSteaming: tariff_steamingInput!): Int!
  deleteTariffSteaming(deleteTariffSteam_guids: [String!]!): Int!
  addUN_Number(unNumber: un_numberInput!): Int!
}

"""Information about pagination in a connection."""
type PageInfo {
  """
  Indicates whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Indicates whether more edges exist prior the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""A connection to a list of items."""
type QueryBillingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryBillingEdge!]

  """A flattened list of the nodes."""
  nodes: [billing!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryBillingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: billing!
}

"""A connection to a list of items."""
type QueryBillingSOTConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryBillingSOTEdge!]

  """A flattened list of the nodes."""
  nodes: [billing_sot!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryBillingSOTEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: billing_sot!
}

type aspnetroles {
  id: String
  Role: String
  aspnetuserroles(where: aspnetuserrolesFilterInput): [aspnetuserroles]
}

type aspnetuserroles {
  userID: String!
  roleID: String!
  aspnetusers(where: aspnetusersFilterInput): aspnetusers
  aspnetroles(where: aspnetrolesFilterInput): aspnetroles
}

type aspnetusers {
  id: String
  corporateID: Int
  userName: String
  email: String
  phoneNumber: String
  aspnetuserroles(where: aspnetuserrolesFilterInput): [aspnetuserroles]
}

type billing {
  guid: String
  currency_guid: String!
  bill_to_guid: String!
  invoice_no: String!
  invoice_dt: Long!
  invoice_due: Long
  status_cv: String!
  remarks: String
  currency: currency
  customer_company(where: customer_companyFilterInput): customer_company
  cleaning(where: cleaningFilterInput): [cleaning]
  steaming(where: steamingFilterInput): [steaming]
  residue(where: residueFilterInput): [residue]
  repair_customer(where: repairFilterInput): [repair]
  repair_owner(where: repairFilterInput): [repair]
  lolo_billing_sot(where: billing_sotFilterInput): [billing_sot]
  preinsp_billing_sot(where: billing_sotFilterInput): [billing_sot]
  storage_billing_sot(where: billing_sotFilterInput): [billing_sot]
  gateio_billing_sot(where: billing_sotFilterInput): [billing_sot]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type billing_sot {
  guid: String
  sot_guid: String!
  tariff_depot_guid: String!
  lolo_billing_guid: String
  preinsp_billing_guid: String
  storage_billing_guid: String
  gateio_billing_guid: String
  preinspection: Boolean
  lift_on: Boolean
  lift_off: Boolean
  storage_cal_cv: String
  preinspection_cost: Float
  lift_on_cost: Float
  lift_off_cost: Float
  storage_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  free_storage: Int
  remarks: String
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  tariff_depot(where: tariff_depotFilterInput): tariff_depot
  lolo_billing: billing
  preinsp_billing: billing
  storage_billing: billing
  gateio_billing: billing
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type booking {
  guid: String
  sot_guid: String
  test_class_cv: String
  reference: String
  book_type_cv: String
  status_cv: String
  remarks: String
  booking_dt: Long
  storing_order_tank: storing_order_tank
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type cleaning {
  guid: String
  sot_guid: String
  bill_to_guid: String
  job_order_guid: String
  cleaning_cost: Float
  buffer_cost: Float
  status_cv: String
  remarks: String
  job_no: String
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  customer_billing_guid: String
  owner_billing_guid: String
  action: String!
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  customer_company(where: customer_companyFilterInput): customer_company
  job_order(where: job_orderFilterInput): job_order
  customer_billing(where: billingFilterInput): billing
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type cleaning_category {
  guid: String
  name: String
  description: String
  sequence: Int
  cost: Float
  tariff_cleanings: [tariff_cleaning!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type cleaning_method {
  guid: String
  name: String
  sequence: Int
  description: String
  tariff_cleanings: [tariff_cleaning!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type currency {
  guid: String
  currency_code: String
  currency_name: String
  rate: Float
  sequence: Int
  is_active: Boolean
  customer_company: [customer_company]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type customer_company {
  guid: String
  currency_guid: String
  name: String
  type_cv: String
  code: String
  address_line1: String
  address_line2: String
  city: String
  country: String
  postal: String
  phone: String
  email: String
  website: String
  effective_dt: Long
  agreement_due_dt: Long
  remarks: String
  def_template_guid: String
  def_tank_guid: String
  main_customer_guid: String
  tank: tank
  currency: currency
  template_est(where: template_estFilterInput): template_est
  repair(where: repairFilterInput): [repair!]
  storing_order_tank: [storing_order_tank!]
  storing_orders: [storing_order!]
  cc_contact_person(where: customer_company_contact_personFilterInput): [customer_company_contact_person!]
  release_order: [release_order!]
  package_residue: [package_residue!]
  package_buffer: [package_buffer!]
  package_repair: [package_repair!]
  template_est_customer: [template_est_customer!]
  tank_info(where: tank_infoFilterInput): [tank_info]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type customer_company_contact_person {
  guid: String
  customer_guid: String
  name: String
  title_cv: String
  job_title: String
  email: String
  department: String
  did: String
  phone: String
  email_alert: Int
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type in_gate {
  guid: String
  so_tank_guid: String
  haulier: String
  eir_no: String
  eir_status_cv: String
  vehicle_no: String
  yard_cv: String
  driver_name: String
  lolo_cv: String
  preinspection_cv: String
  eir_dt: Long
  remarks: String
  publish_by: String
  publish_dt: Long
  in_gate_survey: in_gate_survey
  tank: storing_order_tank
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type in_gate_survey {
  guid: String
  in_gate_guid: String!
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  in_gate: in_gate
  tariff_buffer: tariff_buffer
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type job_order {
  guid: String
  sot_guid: String
  team_guid: String
  job_order_no: String
  working_hour: Float
  total_hour: Float
  job_type_cv: String
  status_cv: String
  remarks: String
  start_dt: Long
  complete_dt: Long
  qc_dt: Long
  qc_by: String
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  team(where: teamFilterInput): team
  time_table(where: time_tableFilterInput): [time_table]
  repair_part(where: repair_partFilterInput): [repair_part]
  residue_part(where: residue_partFilterInput): [residue_part]
  cleaning(where: cleaningFilterInput): [cleaning]
  steaming_temp(where: steaming_tempFilterInput, order: [steaming_tempSortInput!]): [steaming_temp]
  steaming_part(where: steaming_partFilterInput): [steaming_part]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type out_gate {
  guid: String
  so_tank_guid: String
  haulier: String
  eir_no: String
  eir_dt: Long
  eir_status_cv: String
  vehicle_no: String
  driver_name: String
  remarks: String
  publish_by: String
  publish_dt: Long
  tank: storing_order_tank
  out_gate_survey: out_gate_survey
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type out_gate_survey {
  guid: String
  out_gate_guid: String
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  out_gate: out_gate
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_buffer {
  guid: String!
  tariff_buffer_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_buffer: tariff_buffer
  customer_company: customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_depot {
  guid: String!
  customer_company_guid: String
  tariff_depot_guid: String
  remarks: String
  preinspection_cost: Float
  lolo_cost: Float
  storage_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  free_storage: Int
  storage_cal_cv: String
  tariff_depot: tariff_depot
  customer_company: customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_repair {
  guid: String!
  tariff_repair_guid: String
  customer_company_guid: String
  material_cost: Float
  labour_hour: Float
  remarks: String
  tariff_repair: tariff_repair
  customer_company(where: customer_companyFilterInput): customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_residue {
  guid: String!
  tariff_residue_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_residue(where: tariff_residueFilterInput): tariff_residue
  customer_company(where: customer_companyFilterInput): customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_steaming {
  guid: String!
  tariff_steaming_guid: String
  customer_company_guid: String
  steaming_exclusive_guid: String
  cost: Float
  labour: Float
  remarks: String
  tariff_steaming(where: tariff_steamingFilterInput): tariff_steaming
  customer_company(where: customer_companyFilterInput): customer_company
  steaming_exclusive(where: steaming_exclusiveFilterInput): steaming_exclusive
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type release_order {
  guid: String!
  ro_no: String
  ro_notes: String
  haulier: String
  remarks: String
  status_cv: String
  customer_company_guid: String
  ro_generated: Boolean
  release_dt: Long
  customer_company: customer_company
  release_order_sot(where: release_order_sotFilterInput): [release_order_sot]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type release_order_sot {
  guid: String
  sot_guid: String
  ro_guid: String
  status_cv: String
  remarks: String
  storing_order_tank: storing_order_tank
  release_order: release_order
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type repair {
  guid: String
  sot_guid: String
  aspnetusers_guid: String
  estimate_no: String
  labour_cost_discount: Float
  material_cost_discount: Float
  labour_cost: Float
  total_cost: Float
  remarks: String
  owner_enable: Boolean
  status_cv: String
  job_no: String
  total_hour: Float
  complete_dt: Long
  na_dt: Long
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  bill_to_guid: String
  customer_billing_guid: String
  owner_billing_guid: String
  customer_company(where: customer_companyFilterInput): customer_company
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  aspnetsuser: aspnetusers
  repair_part(where: repair_partFilterInput): [repair_part!]
  customer_billing(where: billingFilterInput): billing
  owner_billing(where: billingFilterInput): billing
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type repair_part {
  guid: String
  tariff_repair_guid: String!
  repair_guid: String
  job_order_guid: String
  description: String
  location_cv: String
  remarks: String
  comment: String
  quantity: Int
  hour: Float
  owner: Boolean!
  material_cost: Float
  approve_qty: Int
  approve_hour: Float
  approve_cost: Float
  approve_part: Boolean
  complete_dt: Long
  action: String
  tariff_repair: tariff_repair
  repair(where: repairFilterInput): repair
  job_order(where: job_orderFilterInput): job_order
  rp_damage_repair(where: rp_damage_repairFilterInput): [rp_damage_repair!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type residue {
  guid: String
  sot_guid: String
  bill_to_guid: String
  status_cv: String
  remarks: String
  job_no: String
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  estimate_no: String
  customer_billing_guid: String
  owner_billing_guid: String
  customer_company(where: customer_companyFilterInput): customer_company
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  residue_part(where: residue_partFilterInput): [residue_part]
  customer_billing(where: billingFilterInput): billing
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type residue_part {
  guid: String
  residue_guid: String
  tariff_residue_guid: String
  job_order_guid: String
  description: String
  quantity: Int
  qty_unit_type_cv: String
  cost: Float
  approve_part: Boolean
  approve_qty: Int
  approve_cost: Float
  complete_dt: Long
  residue(where: residueFilterInput): residue
  tariff_residue(where: tariff_residueFilterInput): tariff_residue
  job_order(where: job_orderFilterInput): job_order
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type rp_damage_repair {
  guid: String
  rp_guid: String
  code_cv: String!
  code_type: Int!
  action: String
  repair_part: repair_part
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type scheduling {
  guid: String
  status_cv: String
  book_type_cv: String
  remarks: String
  scheduling_sot(where: scheduling_sotFilterInput): [scheduling_sot!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type scheduling_sot {
  guid: String
  sot_guid: String
  scheduling_guid: String
  scheduling_dt: Long
  reference: String
  status_cv: String
  remarks: String
  storing_order_tank: storing_order_tank
  scheduling: scheduling
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type steaming {
  guid: String
  sot_guid: String
  status_cv: String
  remarks: String
  job_no: String
  total_cost: Float
  estimate_no: String
  estimate_by: String
  estimate_dt: Long
  approve_by: String
  approve_dt: Long
  begin_by: String
  begin_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  invoice_by: String
  invoice_dt: Long
  allocate_by: String
  allocate_dt: Long
  bill_to_guid: String
  customer_billing_guid: String
  owner_billing_guid: String
  action: String!
  customer_company(where: customer_companyFilterInput): customer_company
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  steaming_part(where: steaming_partFilterInput, order: [steaming_partSortInput!]): [steaming_part]
  customer_billing(where: billingFilterInput): billing
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type steaming_exclusive {
  guid: String!
  tariff_cleaning_guid: String!
  temp_min: Float
  temp_max: Float
  remarks: String
  labour: Float
  tariff_cleaning(where: tariff_cleaningFilterInput): tariff_cleaning
  steaming_part(where: steaming_partFilterInput): [steaming_part]
  package_steaming(where: package_steamingFilterInput): package_steaming
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type steaming_part {
  guid: String
  steaming_guid: String
  tariff_steaming_guid: String
  steaming_exclusive_guid: String
  job_order_guid: String
  description: String
  quantity: Int
  cost: Float
  labour: Float
  approve_part: Boolean
  approve_qty: Int
  approve_labour: Float
  approve_cost: Float
  complete_dt: Long
  action: String!
  steaming(where: steamingFilterInput): steaming
  tariff_steaming(where: tariff_steamingFilterInput): tariff_steaming
  steaming_exclusive(where: steaming_exclusiveFilterInput): steaming_exclusive
  job_order(where: job_orderFilterInput): job_order
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type steaming_temp {
  guid: String
  job_order_guid: String
  meter_temp: Float
  top_temp: Float
  bottom_temp: Float
  remarks: String
  report_dt: Long
  job_order: job_order
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type storing_order {
  guid: String
  so_no: String
  so_notes: String
  haulier: String
  remarks: String
  status_cv: String
  customer_company_guid: String
  customer_company: customer_company
  storing_order_tank(where: storing_order_tankFilterInput): [storing_order_tank!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type storing_order_tank {
  guid: String
  so_guid: String
  unit_type_guid: String
  last_cargo_guid: String
  last_test_guid: String
  owner_guid: String
  tank_no: String
  job_no: String
  preinspect_job_no: String
  liftoff_job_no: String
  lifton_job_no: String
  takein_job_no: String
  release_job_no: String
  eta_dt: Long
  purpose_steam: Boolean
  purpose_storage: Boolean
  purpose_cleaning: Boolean
  purpose_repair_cv: String
  required_temp: Float
  clean_status_cv: String
  estimate_cv: String
  certificate_cv: String
  remarks: String
  etr_dt: Long
  status_cv: String
  tank_status_cv: String
  tank_note: String
  release_note: String
  cleaning_remarks: String
  steaming_remarks: String
  repair_remarks: String
  storage_remarks: String
  last_release_dt: Long
  storing_order: storing_order
  tariff_cleaning: tariff_cleaning
  customer_company: customer_company
  tank_info: tank_info
  tank(where: tankFilterInput): tank
  in_gate(where: in_gateFilterInput): [in_gate!]
  out_gate(where: out_gateFilterInput): [out_gate!]
  booking(where: bookingFilterInput): [booking!]
  scheduling_sot(where: scheduling_sotFilterInput): [scheduling_sot!]
  release_order_sot(where: release_order_sotFilterInput): [release_order_sot!]
  repair(where: repairFilterInput): [repair!]
  residue(where: residueFilterInput): [residue]
  cleaning(where: cleaningFilterInput): [cleaning]
  steaming(where: steamingFilterInput): [steaming]
  survey_detail(where: survey_detailFilterInput): [survey_detail]
  transfer(where: transferFilterInput, order: [transferSortInput!]): [transfer]
  billing_sot(where: billing_sotFilterInput): [billing_sot]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type survey_detail {
  guid: String
  sot_guid: String!
  status_cv: String!
  survey_type_cv: String!
  test_type_cv: String
  test_class_cv: String
  remarks: String
  survey_dt: Long!
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tank {
  guid: String
  tariff_depot_guid: String
  unit_type: String
  description: String
  tariff_depot: tariff_depot
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tank_info {
  guid: String
  tank_no: String!
  owner_guid: String
  unit_type_guid: String
  tank_comp_guid: String
  manufacturer_cv: String
  dom_dt: Long
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  capacity: Int
  tare_weight: Int
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  last_notify_dt: Long
  last_release_dt: Long
  yard_cv: String
  tank(where: tankFilterInput): tank
  customer_company(where: customer_companyFilterInput): customer_company
  tariff_buffer(where: tariff_bufferFilterInput): tariff_buffer
  storing_order_tank(where: storing_order_tankFilterInput): [storing_order_tank]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_buffer {
  guid: String!
  buffer_type: String
  cost: Float
  remarks: String
  package_buffer(where: package_bufferFilterInput): [package_buffer]
  in_gate_survey(where: in_gate_surveyFilterInput): [in_gate_survey]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_cleaning {
  guid: String!
  cargo: String
  alias: String
  description: String
  remarks: String
  un_no: String
  class_cv: String
  cleaning_method_guid: String
  cleaning_category_guid: String
  msds_guid: String
  flash_point: Int
  in_gate_alert: String
  depot_note: String
  hazard_level_cv: String
  ban_type_cv: String
  nature_cv: String
  open_on_gate_cv: String
  cleaning_method(where: cleaning_methodFilterInput): cleaning_method
  cleaning_category(where: cleaning_categoryFilterInput): cleaning_category
  storing_order_tank(where: storing_order_tankFilterInput): [storing_order_tank!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_depot {
  guid: String
  profile_name: String
  description: String
  preinspection_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  lolo_cost: Float
  storage_cost: Float
  free_storage: Int
  tanks(where: tankFilterInput): [tank]
  package_depot(where: package_depotFilterInput): [package_depot]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_repair {
  guid: String!
  group_name_cv: String
  subgroup_name_cv: String
  part_name: String
  alias: String
  dimension: String
  height_diameter: Float
  height_diameter_unit_cv: String
  width_diameter: Float
  width_diameter_unit_cv: String
  thickness: Float
  thickness_unit_cv: String
  length: Float
  length_unit_cv: String
  labour_hour: Float
  material_cost: Float
  remarks: String
  template_est_part(where: template_est_partFilterInput): [template_est_part!]
  repair_part(where: repair_partFilterInput): [repair_part!]
  package_repair(where: package_repairFilterInput): [package_repair!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_residue {
  guid: String!
  description: String
  cost: Float
  remarks: String
  package_residue(where: package_residueFilterInput): [package_residue!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_steaming {
  guid: String!
  temp_min: Float
  temp_max: Float
  cost: Float
  labour: Float
  remarks: String
  package_steaming(where: package_steamingFilterInput): [package_steaming]
  steaming_part(where: steaming_partFilterInput): [steaming_part]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type team {
  guid: String
  description: String
  department_cv: String
  job_order(where: job_orderFilterInput): [job_order]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type template_est {
  guid: String
  type_cv: String!
  labour_cost_discount: Float!
  material_cost_discount: Float!
  template_name: String!
  remarks: String
  template_est_customer(where: template_est_customerFilterInput): [template_est_customer!]
  template_est_part(where: template_est_partFilterInput): [template_est_part!]
  customer_company(where: customer_companyFilterInput): [customer_company!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type template_est_customer {
  guid: String
  template_est_guid: String
  customer_company_guid: String
  action: String
  template_est: template_est
  customer_company: customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type template_est_part {
  guid: String
  template_est_guid: String
  tariff_repair_guid: String!
  description: String
  location_cv: String
  comment: String
  remarks: String
  quantity: Int
  hour: Float
  action: String
  template_est: template_est
  tariff_repair: tariff_repair
  tep_damage_repair(where: tep_damage_repairFilterInput): [tep_damage_repair!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tep_damage_repair {
  guid: String
  tep_guid: String
  code_cv: String!
  code_type: Int!
  action: String
  template_est_part: template_est_part
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type time_table {
  guid: String
  job_order_guid: String
  start_time: Long
  stop_time: Long
  job_order: job_order
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type transfer {
  guid: String
  sot_guid: String!
  location_from_cv: String
  location_to_cv: String
  transfer_out_dt: Long
  transfer_in_dt: Long
  haulier: String
  vehicle_no: String
  driver_name: String
  remarks: String
  action: String
  storing_order_tank(where: storing_order_tankFilterInput): storing_order_tank
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input BillingEstimateRequestInput {
  process_guid: String!
  process_type: String!
  billing_party: String!
  action: String!
}

input BooleanOperationFilterInput {
  eq: Boolean
  neq: Boolean
}

input FloatOperationFilterInput {
  eq: Float
  neq: Float
  in: [Float]
  nin: [Float]
  gt: Float
  ngt: Float
  gte: Float
  ngte: Float
  lt: Float
  nlt: Float
  lte: Float
  nlte: Float
}

input IntOperationFilterInput {
  eq: Int
  neq: Int
  in: [Int]
  nin: [Int]
  gt: Int
  ngt: Int
  gte: Int
  ngte: Int
  lt: Int
  nlt: Int
  lte: Int
  nlte: Int
}

input ListFilterInputTypeOfaspnetuserrolesFilterInput {
  all: aspnetuserrolesFilterInput
  none: aspnetuserrolesFilterInput
  some: aspnetuserrolesFilterInput
  any: Boolean
}

input ListFilterInputTypeOfbilling_sotFilterInput {
  all: billing_sotFilterInput
  none: billing_sotFilterInput
  some: billing_sotFilterInput
  any: Boolean
}

input ListFilterInputTypeOfbookingFilterInput {
  all: bookingFilterInput
  none: bookingFilterInput
  some: bookingFilterInput
  any: Boolean
}

input ListFilterInputTypeOfcleaningFilterInput {
  all: cleaningFilterInput
  none: cleaningFilterInput
  some: cleaningFilterInput
  any: Boolean
}

input ListFilterInputTypeOfcustomer_companyFilterInput {
  all: customer_companyFilterInput
  none: customer_companyFilterInput
  some: customer_companyFilterInput
  any: Boolean
}

input ListFilterInputTypeOfcustomer_company_contact_personFilterInput {
  all: customer_company_contact_personFilterInput
  none: customer_company_contact_personFilterInput
  some: customer_company_contact_personFilterInput
  any: Boolean
}

input ListFilterInputTypeOfin_gateFilterInput {
  all: in_gateFilterInput
  none: in_gateFilterInput
  some: in_gateFilterInput
  any: Boolean
}

input ListFilterInputTypeOfin_gate_surveyFilterInput {
  all: in_gate_surveyFilterInput
  none: in_gate_surveyFilterInput
  some: in_gate_surveyFilterInput
  any: Boolean
}

input ListFilterInputTypeOfjob_orderFilterInput {
  all: job_orderFilterInput
  none: job_orderFilterInput
  some: job_orderFilterInput
  any: Boolean
}

input ListFilterInputTypeOfout_gateFilterInput {
  all: out_gateFilterInput
  none: out_gateFilterInput
  some: out_gateFilterInput
  any: Boolean
}

input ListFilterInputTypeOfpackage_bufferFilterInput {
  all: package_bufferFilterInput
  none: package_bufferFilterInput
  some: package_bufferFilterInput
  any: Boolean
}

input ListFilterInputTypeOfpackage_depotFilterInput {
  all: package_depotFilterInput
  none: package_depotFilterInput
  some: package_depotFilterInput
  any: Boolean
}

input ListFilterInputTypeOfpackage_repairFilterInput {
  all: package_repairFilterInput
  none: package_repairFilterInput
  some: package_repairFilterInput
  any: Boolean
}

input ListFilterInputTypeOfpackage_residueFilterInput {
  all: package_residueFilterInput
  none: package_residueFilterInput
  some: package_residueFilterInput
  any: Boolean
}

input ListFilterInputTypeOfpackage_steamingFilterInput {
  all: package_steamingFilterInput
  none: package_steamingFilterInput
  some: package_steamingFilterInput
  any: Boolean
}

input ListFilterInputTypeOfrelease_orderFilterInput {
  all: release_orderFilterInput
  none: release_orderFilterInput
  some: release_orderFilterInput
  any: Boolean
}

input ListFilterInputTypeOfrelease_order_sotFilterInput {
  all: release_order_sotFilterInput
  none: release_order_sotFilterInput
  some: release_order_sotFilterInput
  any: Boolean
}

input ListFilterInputTypeOfrepairFilterInput {
  all: repairFilterInput
  none: repairFilterInput
  some: repairFilterInput
  any: Boolean
}

input ListFilterInputTypeOfrepair_partFilterInput {
  all: repair_partFilterInput
  none: repair_partFilterInput
  some: repair_partFilterInput
  any: Boolean
}

input ListFilterInputTypeOfresidueFilterInput {
  all: residueFilterInput
  none: residueFilterInput
  some: residueFilterInput
  any: Boolean
}

input ListFilterInputTypeOfresidue_partFilterInput {
  all: residue_partFilterInput
  none: residue_partFilterInput
  some: residue_partFilterInput
  any: Boolean
}

input ListFilterInputTypeOfrp_damage_repairFilterInput {
  all: rp_damage_repairFilterInput
  none: rp_damage_repairFilterInput
  some: rp_damage_repairFilterInput
  any: Boolean
}

input ListFilterInputTypeOfscheduling_sotFilterInput {
  all: scheduling_sotFilterInput
  none: scheduling_sotFilterInput
  some: scheduling_sotFilterInput
  any: Boolean
}

input ListFilterInputTypeOfsteamingFilterInput {
  all: steamingFilterInput
  none: steamingFilterInput
  some: steamingFilterInput
  any: Boolean
}

input ListFilterInputTypeOfsteaming_partFilterInput {
  all: steaming_partFilterInput
  none: steaming_partFilterInput
  some: steaming_partFilterInput
  any: Boolean
}

input ListFilterInputTypeOfsteaming_tempFilterInput {
  all: steaming_tempFilterInput
  none: steaming_tempFilterInput
  some: steaming_tempFilterInput
  any: Boolean
}

input ListFilterInputTypeOfstoring_orderFilterInput {
  all: storing_orderFilterInput
  none: storing_orderFilterInput
  some: storing_orderFilterInput
  any: Boolean
}

input ListFilterInputTypeOfstoring_order_tankFilterInput {
  all: storing_order_tankFilterInput
  none: storing_order_tankFilterInput
  some: storing_order_tankFilterInput
  any: Boolean
}

input ListFilterInputTypeOfsurvey_detailFilterInput {
  all: survey_detailFilterInput
  none: survey_detailFilterInput
  some: survey_detailFilterInput
  any: Boolean
}

input ListFilterInputTypeOftankFilterInput {
  all: tankFilterInput
  none: tankFilterInput
  some: tankFilterInput
  any: Boolean
}

input ListFilterInputTypeOftank_infoFilterInput {
  all: tank_infoFilterInput
  none: tank_infoFilterInput
  some: tank_infoFilterInput
  any: Boolean
}

input ListFilterInputTypeOftariff_cleaningFilterInput {
  all: tariff_cleaningFilterInput
  none: tariff_cleaningFilterInput
  some: tariff_cleaningFilterInput
  any: Boolean
}

input ListFilterInputTypeOftemplate_est_customerFilterInput {
  all: template_est_customerFilterInput
  none: template_est_customerFilterInput
  some: template_est_customerFilterInput
  any: Boolean
}

input ListFilterInputTypeOftemplate_est_partFilterInput {
  all: template_est_partFilterInput
  none: template_est_partFilterInput
  some: template_est_partFilterInput
  any: Boolean
}

input ListFilterInputTypeOftep_damage_repairFilterInput {
  all: tep_damage_repairFilterInput
  none: tep_damage_repairFilterInput
  some: tep_damage_repairFilterInput
  any: Boolean
}

input ListFilterInputTypeOftime_tableFilterInput {
  all: time_tableFilterInput
  none: time_tableFilterInput
  some: time_tableFilterInput
  any: Boolean
}

input ListFilterInputTypeOftransferFilterInput {
  all: transferFilterInput
  none: transferFilterInput
  some: transferFilterInput
  any: Boolean
}

input LongOperationFilterInput {
  eq: Long
  neq: Long
  in: [Long]
  nin: [Long]
  gt: Long
  ngt: Long
  gte: Long
  ngte: Long
  lt: Long
  nlt: Long
  lte: Long
  nlte: Long
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

input aspnetrolesFilterInput {
  and: [aspnetrolesFilterInput!]
  or: [aspnetrolesFilterInput!]
  id: StringOperationFilterInput
  Role: StringOperationFilterInput
  aspnetuserroles: ListFilterInputTypeOfaspnetuserrolesFilterInput
}

input aspnetrolesInput {
  id: String
  Role: String
  aspnetuserroles: [aspnetuserrolesInput]
}

input aspnetuserrolesFilterInput {
  and: [aspnetuserrolesFilterInput!]
  or: [aspnetuserrolesFilterInput!]
  userID: StringOperationFilterInput
  roleID: StringOperationFilterInput
  aspnetusers: aspnetusersFilterInput
  aspnetroles: aspnetrolesFilterInput
}

input aspnetuserrolesInput {
  userID: String!
  roleID: String!
  aspnetusers: aspnetusersInput
  aspnetroles: aspnetrolesInput
}

input aspnetusersFilterInput {
  and: [aspnetusersFilterInput!]
  or: [aspnetusersFilterInput!]
  id: StringOperationFilterInput
  corporateID: IntOperationFilterInput
  userName: StringOperationFilterInput
  email: StringOperationFilterInput
  phoneNumber: StringOperationFilterInput
  aspnetuserroles: ListFilterInputTypeOfaspnetuserrolesFilterInput
}

input aspnetusersInput {
  id: String
  corporateID: Int
  userName: String
  email: String
  phoneNumber: String
  aspnetuserroles: [aspnetuserrolesInput]
}

input billingFilterInput {
  and: [billingFilterInput!]
  or: [billingFilterInput!]
  guid: StringOperationFilterInput
  currency_guid: StringOperationFilterInput
  bill_to_guid: StringOperationFilterInput
  invoice_no: StringOperationFilterInput
  invoice_dt: LongOperationFilterInput
  invoice_due: LongOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  currency: currencyFilterInput
  customer_company: customer_companyFilterInput
  cleaning: ListFilterInputTypeOfcleaningFilterInput
  steaming: ListFilterInputTypeOfsteamingFilterInput
  residue: ListFilterInputTypeOfresidueFilterInput
  repair_customer: ListFilterInputTypeOfrepairFilterInput
  repair_owner: ListFilterInputTypeOfrepairFilterInput
  lolo_billing_sot: ListFilterInputTypeOfbilling_sotFilterInput
  preinsp_billing_sot: ListFilterInputTypeOfbilling_sotFilterInput
  storage_billing_sot: ListFilterInputTypeOfbilling_sotFilterInput
  gateio_billing_sot: ListFilterInputTypeOfbilling_sotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input billingInput {
  guid: String
  currency_guid: String!
  bill_to_guid: String!
  invoice_no: String!
  invoice_dt: Long!
  invoice_due: Long
  status_cv: String!
  remarks: String
  currency: currencyInput
  customer_company: customer_companyInput
  cleaning: [cleaningInput]
  steaming: [steamingInput]
  residue: [residueInput]
  repair_customer: [repairInput]
  repair_owner: [repairInput]
  lolo_billing_sot: [billing_sotInput]
  preinsp_billing_sot: [billing_sotInput]
  storage_billing_sot: [billing_sotInput]
  gateio_billing_sot: [billing_sotInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input billingSortInput {
  guid: SortEnumType
  currency_guid: SortEnumType
  bill_to_guid: SortEnumType
  invoice_no: SortEnumType
  invoice_dt: SortEnumType
  invoice_due: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  currency: currencySortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input billing_sotFilterInput {
  and: [billing_sotFilterInput!]
  or: [billing_sotFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  tariff_depot_guid: StringOperationFilterInput
  lolo_billing_guid: StringOperationFilterInput
  preinsp_billing_guid: StringOperationFilterInput
  storage_billing_guid: StringOperationFilterInput
  gateio_billing_guid: StringOperationFilterInput
  preinspection: BooleanOperationFilterInput
  lift_on: BooleanOperationFilterInput
  lift_off: BooleanOperationFilterInput
  storage_cal_cv: StringOperationFilterInput
  preinspection_cost: FloatOperationFilterInput
  lift_on_cost: FloatOperationFilterInput
  lift_off_cost: FloatOperationFilterInput
  storage_cost: FloatOperationFilterInput
  gate_in_cost: FloatOperationFilterInput
  gate_out_cost: FloatOperationFilterInput
  free_storage: IntOperationFilterInput
  remarks: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  tariff_depot: tariff_depotFilterInput
  lolo_billing: billingFilterInput
  preinsp_billing: billingFilterInput
  storage_billing: billingFilterInput
  gateio_billing: billingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input billing_sotInput {
  guid: String
  sot_guid: String!
  tariff_depot_guid: String!
  lolo_billing_guid: String
  preinsp_billing_guid: String
  storage_billing_guid: String
  gateio_billing_guid: String
  preinspection: Boolean
  lift_on: Boolean
  lift_off: Boolean
  storage_cal_cv: String
  preinspection_cost: Float
  lift_on_cost: Float
  lift_off_cost: Float
  storage_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  free_storage: Int
  remarks: String
  storing_order_tank: storing_order_tankInput
  tariff_depot: tariff_depotInput
  lolo_billing: billingInput
  preinsp_billing: billingInput
  storage_billing: billingInput
  gateio_billing: billingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input billing_sotSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  tariff_depot_guid: SortEnumType
  lolo_billing_guid: SortEnumType
  preinsp_billing_guid: SortEnumType
  storage_billing_guid: SortEnumType
  gateio_billing_guid: SortEnumType
  preinspection: SortEnumType
  lift_on: SortEnumType
  lift_off: SortEnumType
  storage_cal_cv: SortEnumType
  preinspection_cost: SortEnumType
  lift_on_cost: SortEnumType
  lift_off_cost: SortEnumType
  storage_cost: SortEnumType
  gate_in_cost: SortEnumType
  gate_out_cost: SortEnumType
  free_storage: SortEnumType
  remarks: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  tariff_depot: tariff_depotSortInput
  lolo_billing: billingSortInput
  preinsp_billing: billingSortInput
  storage_billing: billingSortInput
  gateio_billing: billingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input bookingFilterInput {
  and: [bookingFilterInput!]
  or: [bookingFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  test_class_cv: StringOperationFilterInput
  reference: StringOperationFilterInput
  book_type_cv: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  booking_dt: LongOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input bookingInput {
  guid: String
  sot_guid: String
  test_class_cv: String
  reference: String
  book_type_cv: String
  status_cv: String
  remarks: String
  booking_dt: Long
  storing_order_tank: storing_order_tankInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input cleaningFilterInput {
  and: [cleaningFilterInput!]
  or: [cleaningFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  bill_to_guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  cleaning_cost: FloatOperationFilterInput
  buffer_cost: FloatOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  job_no: StringOperationFilterInput
  approve_by: StringOperationFilterInput
  approve_dt: LongOperationFilterInput
  allocate_by: StringOperationFilterInput
  allocate_dt: LongOperationFilterInput
  complete_by: StringOperationFilterInput
  complete_dt: LongOperationFilterInput
  na_dt: LongOperationFilterInput
  customer_billing_guid: StringOperationFilterInput
  owner_billing_guid: StringOperationFilterInput
  action: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  customer_company: customer_companyFilterInput
  job_order: job_orderFilterInput
  customer_billing: billingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input cleaningInput {
  guid: String
  sot_guid: String
  bill_to_guid: String
  job_order_guid: String
  cleaning_cost: Float
  buffer_cost: Float
  status_cv: String
  remarks: String
  job_no: String
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  customer_billing_guid: String
  owner_billing_guid: String
  action: String!
  storing_order_tank: storing_order_tankInput
  customer_company: customer_companyInput
  job_order: job_orderInput
  customer_billing: billingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input cleaning_categoryFilterInput {
  and: [cleaning_categoryFilterInput!]
  or: [cleaning_categoryFilterInput!]
  guid: StringOperationFilterInput
  name: StringOperationFilterInput
  description: StringOperationFilterInput
  sequence: IntOperationFilterInput
  cost: FloatOperationFilterInput
  tariff_cleanings: ListFilterInputTypeOftariff_cleaningFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input cleaning_categoryInput {
  guid: String
  name: String
  description: String
  sequence: Int
  cost: Float
  tariff_cleanings: [tariff_cleaningInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input cleaning_categorySortInput {
  guid: SortEnumType
  name: SortEnumType
  description: SortEnumType
  sequence: SortEnumType
  cost: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input cleaning_methodFilterInput {
  and: [cleaning_methodFilterInput!]
  or: [cleaning_methodFilterInput!]
  guid: StringOperationFilterInput
  name: StringOperationFilterInput
  sequence: IntOperationFilterInput
  description: StringOperationFilterInput
  tariff_cleanings: ListFilterInputTypeOftariff_cleaningFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input cleaning_methodInput {
  guid: String
  name: String
  sequence: Int
  description: String
  tariff_cleanings: [tariff_cleaningInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input cleaning_methodSortInput {
  guid: SortEnumType
  name: SortEnumType
  sequence: SortEnumType
  description: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input currencyFilterInput {
  and: [currencyFilterInput!]
  or: [currencyFilterInput!]
  guid: StringOperationFilterInput
  currency_code: StringOperationFilterInput
  currency_name: StringOperationFilterInput
  rate: FloatOperationFilterInput
  sequence: IntOperationFilterInput
  is_active: BooleanOperationFilterInput
  customer_company: ListFilterInputTypeOfcustomer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input currencyInput {
  guid: String
  currency_code: String
  currency_name: String
  rate: Float
  sequence: Int
  is_active: Boolean
  customer_company: [customer_companyInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input currencySortInput {
  guid: SortEnumType
  currency_code: SortEnumType
  currency_name: SortEnumType
  rate: SortEnumType
  sequence: SortEnumType
  is_active: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input customer_companyFilterInput {
  and: [customer_companyFilterInput!]
  or: [customer_companyFilterInput!]
  guid: StringOperationFilterInput
  currency_guid: StringOperationFilterInput
  name: StringOperationFilterInput
  type_cv: StringOperationFilterInput
  code: StringOperationFilterInput
  address_line1: StringOperationFilterInput
  address_line2: StringOperationFilterInput
  city: StringOperationFilterInput
  country: StringOperationFilterInput
  postal: StringOperationFilterInput
  phone: StringOperationFilterInput
  email: StringOperationFilterInput
  website: StringOperationFilterInput
  effective_dt: LongOperationFilterInput
  agreement_due_dt: LongOperationFilterInput
  remarks: StringOperationFilterInput
  def_template_guid: StringOperationFilterInput
  def_tank_guid: StringOperationFilterInput
  main_customer_guid: StringOperationFilterInput
  tank: tankFilterInput
  currency: currencyFilterInput
  template_est: template_estFilterInput
  repair: ListFilterInputTypeOfrepairFilterInput
  storing_order_tank: ListFilterInputTypeOfstoring_order_tankFilterInput
  storing_orders: ListFilterInputTypeOfstoring_orderFilterInput
  cc_contact_person: ListFilterInputTypeOfcustomer_company_contact_personFilterInput
  release_order: ListFilterInputTypeOfrelease_orderFilterInput
  package_residue: ListFilterInputTypeOfpackage_residueFilterInput
  package_buffer: ListFilterInputTypeOfpackage_bufferFilterInput
  package_repair: ListFilterInputTypeOfpackage_repairFilterInput
  template_est_customer: ListFilterInputTypeOftemplate_est_customerFilterInput
  tank_info: ListFilterInputTypeOftank_infoFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input customer_companyInput {
  guid: String
  currency_guid: String
  name: String
  type_cv: String
  code: String
  address_line1: String
  address_line2: String
  city: String
  country: String
  postal: String
  phone: String
  email: String
  website: String
  effective_dt: Long
  agreement_due_dt: Long
  remarks: String
  def_template_guid: String
  def_tank_guid: String
  main_customer_guid: String
  tank: tankInput
  currency: currencyInput
  template_est: template_estInput
  repair: [repairInput!]
  storing_order_tank: [storing_order_tankInput!]
  storing_orders: [storing_orderInput!]
  cc_contact_person: [customer_company_contact_personInput!]
  release_order: [release_orderInput!]
  package_residue: [package_residueInput!]
  package_buffer: [package_bufferInput!]
  package_repair: [package_repairInput!]
  template_est_customer: [template_est_customerInput!]
  tank_info: [tank_infoInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input customer_companySortInput {
  guid: SortEnumType
  currency_guid: SortEnumType
  name: SortEnumType
  type_cv: SortEnumType
  code: SortEnumType
  address_line1: SortEnumType
  address_line2: SortEnumType
  city: SortEnumType
  country: SortEnumType
  postal: SortEnumType
  phone: SortEnumType
  email: SortEnumType
  website: SortEnumType
  effective_dt: SortEnumType
  agreement_due_dt: SortEnumType
  remarks: SortEnumType
  def_template_guid: SortEnumType
  def_tank_guid: SortEnumType
  main_customer_guid: SortEnumType
  tank: tankSortInput
  currency: currencySortInput
  template_est: template_estSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input customer_company_contact_personFilterInput {
  and: [customer_company_contact_personFilterInput!]
  or: [customer_company_contact_personFilterInput!]
  guid: StringOperationFilterInput
  customer_guid: StringOperationFilterInput
  name: StringOperationFilterInput
  title_cv: StringOperationFilterInput
  job_title: StringOperationFilterInput
  email: StringOperationFilterInput
  department: StringOperationFilterInput
  did: StringOperationFilterInput
  phone: StringOperationFilterInput
  email_alert: IntOperationFilterInput
  action: StringOperationFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input customer_company_contact_personInput {
  guid: String
  customer_guid: String
  name: String
  title_cv: String
  job_title: String
  email: String
  department: String
  did: String
  phone: String
  email_alert: Int
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input in_gateFilterInput {
  and: [in_gateFilterInput!]
  or: [in_gateFilterInput!]
  guid: StringOperationFilterInput
  so_tank_guid: StringOperationFilterInput
  haulier: StringOperationFilterInput
  eir_no: StringOperationFilterInput
  eir_status_cv: StringOperationFilterInput
  vehicle_no: StringOperationFilterInput
  yard_cv: StringOperationFilterInput
  driver_name: StringOperationFilterInput
  lolo_cv: StringOperationFilterInput
  preinspection_cv: StringOperationFilterInput
  eir_dt: LongOperationFilterInput
  remarks: StringOperationFilterInput
  publish_by: StringOperationFilterInput
  publish_dt: LongOperationFilterInput
  in_gate_survey: in_gate_surveyFilterInput
  tank: storing_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input in_gateInput {
  guid: String
  so_tank_guid: String
  haulier: String
  eir_no: String
  eir_status_cv: String
  vehicle_no: String
  yard_cv: String
  driver_name: String
  lolo_cv: String
  preinspection_cv: String
  eir_dt: Long
  remarks: String
  publish_by: String
  publish_dt: Long
  in_gate_survey: in_gate_surveyInput
  tank: storing_order_tankInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input in_gate_surveyFilterInput {
  and: [in_gate_surveyFilterInput!]
  or: [in_gate_surveyFilterInput!]
  guid: StringOperationFilterInput
  in_gate_guid: StringOperationFilterInput
  capacity: IntOperationFilterInput
  tare_weight: IntOperationFilterInput
  take_in_reference: StringOperationFilterInput
  last_test_cv: StringOperationFilterInput
  next_test_cv: StringOperationFilterInput
  test_dt: LongOperationFilterInput
  test_class_cv: StringOperationFilterInput
  dom_dt: LongOperationFilterInput
  inspection_dt: LongOperationFilterInput
  last_release_dt: LongOperationFilterInput
  manufacturer_cv: StringOperationFilterInput
  cladding_cv: StringOperationFilterInput
  max_weight_cv: StringOperationFilterInput
  height_cv: StringOperationFilterInput
  walkway_cv: StringOperationFilterInput
  tank_comp_guid: StringOperationFilterInput
  btm_dis_comp_cv: StringOperationFilterInput
  btm_dis_valve_cv: StringOperationFilterInput
  btm_dis_valve_spec_cv: StringOperationFilterInput
  btm_valve_brand_cv: StringOperationFilterInput
  top_dis_comp_cv: StringOperationFilterInput
  top_dis_valve_cv: StringOperationFilterInput
  top_dis_valve_spec_cv: StringOperationFilterInput
  top_valve_brand_cv: StringOperationFilterInput
  manlid_comp_cv: StringOperationFilterInput
  foot_valve_cv: StringOperationFilterInput
  thermometer: IntOperationFilterInput
  thermometer_cv: StringOperationFilterInput
  ladder: BooleanOperationFilterInput
  data_csc_transportplate: BooleanOperationFilterInput
  airline_valve_pcs: IntOperationFilterInput
  airline_valve_dim: FloatOperationFilterInput
  airline_valve_cv: StringOperationFilterInput
  airline_valve_conn_cv: StringOperationFilterInput
  airline_valve_conn_spec_cv: StringOperationFilterInput
  manlid_cover_cv: StringOperationFilterInput
  manlid_cover_pcs: IntOperationFilterInput
  manlid_cover_pts: IntOperationFilterInput
  manlid_seal_cv: StringOperationFilterInput
  pv_type_cv: StringOperationFilterInput
  pv_spec_cv: StringOperationFilterInput
  pv_type_pcs: IntOperationFilterInput
  pv_spec_pcs: IntOperationFilterInput
  safety_handrail: BooleanOperationFilterInput
  buffer_plate: IntOperationFilterInput
  dipstick: BooleanOperationFilterInput
  residue: FloatOperationFilterInput
  comments: StringOperationFilterInput
  top_coord: StringOperationFilterInput
  bottom_coord: StringOperationFilterInput
  front_coord: StringOperationFilterInput
  rear_coord: StringOperationFilterInput
  left_coord: StringOperationFilterInput
  right_coord: StringOperationFilterInput
  top_remarks: StringOperationFilterInput
  bottom_remarks: StringOperationFilterInput
  front_remarks: StringOperationFilterInput
  rear_remarks: StringOperationFilterInput
  left_remarks: StringOperationFilterInput
  right_remarks: StringOperationFilterInput
  in_gate: in_gateFilterInput
  tariff_buffer: tariff_bufferFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input in_gate_surveyInput {
  guid: String
  in_gate_guid: String!
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  in_gate: in_gateInput
  tariff_buffer: tariff_bufferInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input job_orderFilterInput {
  and: [job_orderFilterInput!]
  or: [job_orderFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  team_guid: StringOperationFilterInput
  job_order_no: StringOperationFilterInput
  working_hour: FloatOperationFilterInput
  total_hour: FloatOperationFilterInput
  job_type_cv: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  start_dt: LongOperationFilterInput
  complete_dt: LongOperationFilterInput
  qc_dt: LongOperationFilterInput
  qc_by: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  team: teamFilterInput
  time_table: ListFilterInputTypeOftime_tableFilterInput
  repair_part: ListFilterInputTypeOfrepair_partFilterInput
  residue_part: ListFilterInputTypeOfresidue_partFilterInput
  cleaning: ListFilterInputTypeOfcleaningFilterInput
  steaming_temp: ListFilterInputTypeOfsteaming_tempFilterInput
  steaming_part: ListFilterInputTypeOfsteaming_partFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input job_orderInput {
  guid: String
  sot_guid: String
  team_guid: String
  job_order_no: String
  working_hour: Float
  total_hour: Float
  job_type_cv: String
  status_cv: String
  remarks: String
  start_dt: Long
  complete_dt: Long
  qc_dt: Long
  qc_by: String
  storing_order_tank: storing_order_tankInput
  team: teamInput
  time_table: [time_tableInput]
  repair_part: [repair_partInput]
  residue_part: [residue_partInput]
  cleaning: [cleaningInput]
  steaming_temp: [steaming_tempInput]
  steaming_part: [steaming_partInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input job_orderSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  team_guid: SortEnumType
  job_order_no: SortEnumType
  working_hour: SortEnumType
  total_hour: SortEnumType
  job_type_cv: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  start_dt: SortEnumType
  complete_dt: SortEnumType
  qc_dt: SortEnumType
  qc_by: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  team: teamSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input out_gateFilterInput {
  and: [out_gateFilterInput!]
  or: [out_gateFilterInput!]
  guid: StringOperationFilterInput
  so_tank_guid: StringOperationFilterInput
  haulier: StringOperationFilterInput
  eir_no: StringOperationFilterInput
  eir_dt: LongOperationFilterInput
  eir_status_cv: StringOperationFilterInput
  vehicle_no: StringOperationFilterInput
  driver_name: StringOperationFilterInput
  remarks: StringOperationFilterInput
  publish_by: StringOperationFilterInput
  publish_dt: LongOperationFilterInput
  tank: storing_order_tankFilterInput
  out_gate_survey: out_gate_surveyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input out_gateInput {
  guid: String
  so_tank_guid: String
  haulier: String
  eir_no: String
  eir_dt: Long
  eir_status_cv: String
  vehicle_no: String
  driver_name: String
  remarks: String
  publish_by: String
  publish_dt: Long
  tank: storing_order_tankInput
  out_gate_survey: out_gate_surveyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input out_gate_surveyFilterInput {
  and: [out_gate_surveyFilterInput!]
  or: [out_gate_surveyFilterInput!]
  guid: StringOperationFilterInput
  out_gate_guid: StringOperationFilterInput
  capacity: IntOperationFilterInput
  tare_weight: IntOperationFilterInput
  take_in_reference: StringOperationFilterInput
  last_test_cv: StringOperationFilterInput
  next_test_cv: StringOperationFilterInput
  test_dt: LongOperationFilterInput
  test_class_cv: StringOperationFilterInput
  dom_dt: LongOperationFilterInput
  inspection_dt: LongOperationFilterInput
  last_release_dt: LongOperationFilterInput
  manufacturer_cv: StringOperationFilterInput
  cladding_cv: StringOperationFilterInput
  max_weight_cv: StringOperationFilterInput
  height_cv: StringOperationFilterInput
  walkway_cv: StringOperationFilterInput
  tank_comp_guid: StringOperationFilterInput
  btm_dis_comp_cv: StringOperationFilterInput
  btm_dis_valve_cv: StringOperationFilterInput
  btm_dis_valve_spec_cv: StringOperationFilterInput
  btm_valve_brand_cv: StringOperationFilterInput
  top_dis_comp_cv: StringOperationFilterInput
  top_dis_valve_cv: StringOperationFilterInput
  top_dis_valve_spec_cv: StringOperationFilterInput
  top_valve_brand_cv: StringOperationFilterInput
  manlid_comp_cv: StringOperationFilterInput
  foot_valve_cv: StringOperationFilterInput
  thermometer: IntOperationFilterInput
  thermometer_cv: StringOperationFilterInput
  ladder: BooleanOperationFilterInput
  data_csc_transportplate: BooleanOperationFilterInput
  airline_valve_pcs: IntOperationFilterInput
  airline_valve_dim: FloatOperationFilterInput
  airline_valve_cv: StringOperationFilterInput
  airline_valve_conn_cv: StringOperationFilterInput
  airline_valve_conn_spec_cv: StringOperationFilterInput
  manlid_cover_cv: StringOperationFilterInput
  manlid_cover_pcs: IntOperationFilterInput
  manlid_cover_pts: IntOperationFilterInput
  manlid_seal_cv: StringOperationFilterInput
  pv_type_cv: StringOperationFilterInput
  pv_spec_cv: StringOperationFilterInput
  pv_type_pcs: IntOperationFilterInput
  pv_spec_pcs: IntOperationFilterInput
  safety_handrail: BooleanOperationFilterInput
  buffer_plate: IntOperationFilterInput
  dipstick: BooleanOperationFilterInput
  residue: FloatOperationFilterInput
  comments: StringOperationFilterInput
  top_coord: StringOperationFilterInput
  bottom_coord: StringOperationFilterInput
  front_coord: StringOperationFilterInput
  rear_coord: StringOperationFilterInput
  left_coord: StringOperationFilterInput
  right_coord: StringOperationFilterInput
  top_remarks: StringOperationFilterInput
  bottom_remarks: StringOperationFilterInput
  front_remarks: StringOperationFilterInput
  rear_remarks: StringOperationFilterInput
  left_remarks: StringOperationFilterInput
  right_remarks: StringOperationFilterInput
  out_gate: out_gateFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input out_gate_surveyInput {
  guid: String
  out_gate_guid: String
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  out_gate: out_gateInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_bufferFilterInput {
  and: [package_bufferFilterInput!]
  or: [package_bufferFilterInput!]
  guid: StringOperationFilterInput
  tariff_buffer_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  tariff_buffer: tariff_bufferFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_bufferInput {
  guid: String!
  tariff_buffer_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_buffer: tariff_bufferInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_depotFilterInput {
  and: [package_depotFilterInput!]
  or: [package_depotFilterInput!]
  guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  tariff_depot_guid: StringOperationFilterInput
  remarks: StringOperationFilterInput
  preinspection_cost: FloatOperationFilterInput
  lolo_cost: FloatOperationFilterInput
  storage_cost: FloatOperationFilterInput
  gate_in_cost: FloatOperationFilterInput
  gate_out_cost: FloatOperationFilterInput
  free_storage: IntOperationFilterInput
  storage_cal_cv: StringOperationFilterInput
  tariff_depot: tariff_depotFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_depotInput {
  guid: String!
  customer_company_guid: String
  tariff_depot_guid: String
  remarks: String
  preinspection_cost: Float
  lolo_cost: Float
  storage_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  free_storage: Int
  storage_cal_cv: String
  tariff_depot: tariff_depotInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_repairFilterInput {
  and: [package_repairFilterInput!]
  or: [package_repairFilterInput!]
  guid: StringOperationFilterInput
  tariff_repair_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  material_cost: FloatOperationFilterInput
  labour_hour: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  tariff_repair: tariff_repairFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_repairInput {
  guid: String!
  tariff_repair_guid: String
  customer_company_guid: String
  material_cost: Float
  labour_hour: Float
  remarks: String
  tariff_repair: tariff_repairInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_residueFilterInput {
  and: [package_residueFilterInput!]
  or: [package_residueFilterInput!]
  guid: StringOperationFilterInput
  tariff_residue_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  tariff_residue: tariff_residueFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_residueInput {
  guid: String!
  tariff_residue_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_residue: tariff_residueInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_steamingFilterInput {
  and: [package_steamingFilterInput!]
  or: [package_steamingFilterInput!]
  guid: StringOperationFilterInput
  tariff_steaming_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  steaming_exclusive_guid: StringOperationFilterInput
  cost: FloatOperationFilterInput
  labour: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  tariff_steaming: tariff_steamingFilterInput
  customer_company: customer_companyFilterInput
  steaming_exclusive: steaming_exclusiveFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_steamingInput {
  guid: String!
  tariff_steaming_guid: String
  customer_company_guid: String
  steaming_exclusive_guid: String
  cost: Float
  labour: Float
  remarks: String
  tariff_steaming: tariff_steamingInput
  customer_company: customer_companyInput
  steaming_exclusive: steaming_exclusiveInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_steamingSortInput {
  guid: SortEnumType
  tariff_steaming_guid: SortEnumType
  customer_company_guid: SortEnumType
  steaming_exclusive_guid: SortEnumType
  cost: SortEnumType
  labour: SortEnumType
  remarks: SortEnumType
  tariff_steaming: tariff_steamingSortInput
  customer_company: customer_companySortInput
  steaming_exclusive: steaming_exclusiveSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input release_orderFilterInput {
  and: [release_orderFilterInput!]
  or: [release_orderFilterInput!]
  guid: StringOperationFilterInput
  ro_no: StringOperationFilterInput
  ro_notes: StringOperationFilterInput
  haulier: StringOperationFilterInput
  remarks: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  ro_generated: BooleanOperationFilterInput
  release_dt: LongOperationFilterInput
  customer_company: customer_companyFilterInput
  release_order_sot: ListFilterInputTypeOfrelease_order_sotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input release_orderInput {
  guid: String!
  ro_no: String
  ro_notes: String
  haulier: String
  remarks: String
  status_cv: String
  customer_company_guid: String
  ro_generated: Boolean
  release_dt: Long
  customer_company: customer_companyInput
  release_order_sot: [release_order_sotInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input release_order_sotFilterInput {
  and: [release_order_sotFilterInput!]
  or: [release_order_sotFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  ro_guid: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  release_order: release_orderFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input release_order_sotInput {
  guid: String
  sot_guid: String
  ro_guid: String
  status_cv: String
  remarks: String
  storing_order_tank: storing_order_tankInput
  release_order: release_orderInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input repairFilterInput {
  and: [repairFilterInput!]
  or: [repairFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  aspnetusers_guid: StringOperationFilterInput
  estimate_no: StringOperationFilterInput
  labour_cost_discount: FloatOperationFilterInput
  material_cost_discount: FloatOperationFilterInput
  labour_cost: FloatOperationFilterInput
  total_cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  owner_enable: BooleanOperationFilterInput
  status_cv: StringOperationFilterInput
  job_no: StringOperationFilterInput
  total_hour: FloatOperationFilterInput
  complete_dt: LongOperationFilterInput
  na_dt: LongOperationFilterInput
  approve_by: StringOperationFilterInput
  approve_dt: LongOperationFilterInput
  allocate_by: StringOperationFilterInput
  allocate_dt: LongOperationFilterInput
  bill_to_guid: StringOperationFilterInput
  customer_billing_guid: StringOperationFilterInput
  owner_billing_guid: StringOperationFilterInput
  customer_company: customer_companyFilterInput
  storing_order_tank: storing_order_tankFilterInput
  aspnetsuser: aspnetusersFilterInput
  repair_part: ListFilterInputTypeOfrepair_partFilterInput
  customer_billing: billingFilterInput
  owner_billing: billingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input repairInput {
  guid: String
  sot_guid: String
  aspnetusers_guid: String
  estimate_no: String
  labour_cost_discount: Float
  material_cost_discount: Float
  labour_cost: Float
  total_cost: Float
  remarks: String
  owner_enable: Boolean
  status_cv: String
  job_no: String
  total_hour: Float
  complete_dt: Long
  na_dt: Long
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  bill_to_guid: String
  customer_billing_guid: String
  owner_billing_guid: String
  customer_company: customer_companyInput
  storing_order_tank: storing_order_tankInput
  aspnetsuser: aspnetusersInput
  repair_part: [repair_partInput!]
  customer_billing: billingInput
  owner_billing: billingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input repair_partFilterInput {
  and: [repair_partFilterInput!]
  or: [repair_partFilterInput!]
  guid: StringOperationFilterInput
  tariff_repair_guid: StringOperationFilterInput
  repair_guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  description: StringOperationFilterInput
  location_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  comment: StringOperationFilterInput
  quantity: IntOperationFilterInput
  hour: FloatOperationFilterInput
  owner: BooleanOperationFilterInput
  material_cost: FloatOperationFilterInput
  approve_qty: IntOperationFilterInput
  approve_hour: FloatOperationFilterInput
  approve_cost: FloatOperationFilterInput
  approve_part: BooleanOperationFilterInput
  complete_dt: LongOperationFilterInput
  action: StringOperationFilterInput
  tariff_repair: tariff_repairFilterInput
  repair: repairFilterInput
  job_order: job_orderFilterInput
  rp_damage_repair: ListFilterInputTypeOfrp_damage_repairFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input repair_partInput {
  guid: String
  tariff_repair_guid: String!
  repair_guid: String
  job_order_guid: String
  description: String
  location_cv: String
  remarks: String
  comment: String
  quantity: Int
  hour: Float
  owner: Boolean!
  material_cost: Float
  approve_qty: Int
  approve_hour: Float
  approve_cost: Float
  approve_part: Boolean
  complete_dt: Long
  action: String
  tariff_repair: tariff_repairInput
  repair: repairInput
  job_order: job_orderInput
  rp_damage_repair: [rp_damage_repairInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input residueFilterInput {
  and: [residueFilterInput!]
  or: [residueFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  bill_to_guid: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  job_no: StringOperationFilterInput
  approve_by: StringOperationFilterInput
  approve_dt: LongOperationFilterInput
  allocate_by: StringOperationFilterInput
  allocate_dt: LongOperationFilterInput
  complete_by: StringOperationFilterInput
  complete_dt: LongOperationFilterInput
  na_dt: LongOperationFilterInput
  estimate_no: StringOperationFilterInput
  customer_billing_guid: StringOperationFilterInput
  owner_billing_guid: StringOperationFilterInput
  customer_company: customer_companyFilterInput
  storing_order_tank: storing_order_tankFilterInput
  residue_part: ListFilterInputTypeOfresidue_partFilterInput
  customer_billing: billingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input residueInput {
  guid: String
  sot_guid: String
  bill_to_guid: String
  status_cv: String
  remarks: String
  job_no: String
  approve_by: String
  approve_dt: Long
  allocate_by: String
  allocate_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  estimate_no: String
  customer_billing_guid: String
  owner_billing_guid: String
  customer_company: customer_companyInput
  storing_order_tank: storing_order_tankInput
  residue_part: [residue_partInput]
  customer_billing: billingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input residue_partFilterInput {
  and: [residue_partFilterInput!]
  or: [residue_partFilterInput!]
  guid: StringOperationFilterInput
  residue_guid: StringOperationFilterInput
  tariff_residue_guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  description: StringOperationFilterInput
  quantity: IntOperationFilterInput
  qty_unit_type_cv: StringOperationFilterInput
  cost: FloatOperationFilterInput
  approve_part: BooleanOperationFilterInput
  approve_qty: IntOperationFilterInput
  approve_cost: FloatOperationFilterInput
  complete_dt: LongOperationFilterInput
  residue: residueFilterInput
  tariff_residue: tariff_residueFilterInput
  job_order: job_orderFilterInput
  action: StringOperationFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input residue_partInput {
  guid: String
  residue_guid: String
  tariff_residue_guid: String
  job_order_guid: String
  description: String
  quantity: Int
  qty_unit_type_cv: String
  cost: Float
  approve_part: Boolean
  approve_qty: Int
  approve_cost: Float
  complete_dt: Long
  residue: residueInput
  tariff_residue: tariff_residueInput
  job_order: job_orderInput
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input rp_damage_repairFilterInput {
  and: [rp_damage_repairFilterInput!]
  or: [rp_damage_repairFilterInput!]
  guid: StringOperationFilterInput
  rp_guid: StringOperationFilterInput
  code_cv: StringOperationFilterInput
  code_type: IntOperationFilterInput
  action: StringOperationFilterInput
  repair_part: repair_partFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input rp_damage_repairInput {
  guid: String
  rp_guid: String
  code_cv: String!
  code_type: Int!
  action: String
  repair_part: repair_partInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input schedulingFilterInput {
  and: [schedulingFilterInput!]
  or: [schedulingFilterInput!]
  guid: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  book_type_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  scheduling_sot: ListFilterInputTypeOfscheduling_sotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input schedulingInput {
  guid: String
  status_cv: String
  book_type_cv: String
  remarks: String
  scheduling_sot: [scheduling_sotInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input scheduling_sotFilterInput {
  and: [scheduling_sotFilterInput!]
  or: [scheduling_sotFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  scheduling_guid: StringOperationFilterInput
  scheduling_dt: LongOperationFilterInput
  reference: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  scheduling: schedulingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input scheduling_sotInput {
  guid: String
  sot_guid: String
  scheduling_guid: String
  scheduling_dt: Long
  reference: String
  status_cv: String
  remarks: String
  storing_order_tank: storing_order_tankInput
  scheduling: schedulingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input steamingFilterInput {
  and: [steamingFilterInput!]
  or: [steamingFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  job_no: StringOperationFilterInput
  total_cost: FloatOperationFilterInput
  estimate_no: StringOperationFilterInput
  estimate_by: StringOperationFilterInput
  estimate_dt: LongOperationFilterInput
  approve_by: StringOperationFilterInput
  approve_dt: LongOperationFilterInput
  begin_by: StringOperationFilterInput
  begin_dt: LongOperationFilterInput
  complete_by: StringOperationFilterInput
  complete_dt: LongOperationFilterInput
  na_dt: LongOperationFilterInput
  invoice_by: StringOperationFilterInput
  invoice_dt: LongOperationFilterInput
  allocate_by: StringOperationFilterInput
  allocate_dt: LongOperationFilterInput
  bill_to_guid: StringOperationFilterInput
  customer_billing_guid: StringOperationFilterInput
  owner_billing_guid: StringOperationFilterInput
  action: StringOperationFilterInput
  customer_company: customer_companyFilterInput
  storing_order_tank: storing_order_tankFilterInput
  steaming_part: ListFilterInputTypeOfsteaming_partFilterInput
  customer_billing: billingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input steamingInput {
  guid: String
  sot_guid: String
  status_cv: String
  remarks: String
  job_no: String
  total_cost: Float
  estimate_no: String
  estimate_by: String
  estimate_dt: Long
  approve_by: String
  approve_dt: Long
  begin_by: String
  begin_dt: Long
  complete_by: String
  complete_dt: Long
  na_dt: Long
  invoice_by: String
  invoice_dt: Long
  allocate_by: String
  allocate_dt: Long
  bill_to_guid: String
  customer_billing_guid: String
  owner_billing_guid: String
  action: String!
  customer_company: customer_companyInput
  storing_order_tank: storing_order_tankInput
  steaming_part: [steaming_partInput]
  customer_billing: billingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input steamingSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  job_no: SortEnumType
  total_cost: SortEnumType
  estimate_no: SortEnumType
  estimate_by: SortEnumType
  estimate_dt: SortEnumType
  approve_by: SortEnumType
  approve_dt: SortEnumType
  begin_by: SortEnumType
  begin_dt: SortEnumType
  complete_by: SortEnumType
  complete_dt: SortEnumType
  na_dt: SortEnumType
  invoice_by: SortEnumType
  invoice_dt: SortEnumType
  allocate_by: SortEnumType
  allocate_dt: SortEnumType
  bill_to_guid: SortEnumType
  customer_billing_guid: SortEnumType
  owner_billing_guid: SortEnumType
  action: SortEnumType
  customer_company: customer_companySortInput
  storing_order_tank: storing_order_tankSortInput
  customer_billing: billingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input steaming_exclusiveFilterInput {
  and: [steaming_exclusiveFilterInput!]
  or: [steaming_exclusiveFilterInput!]
  guid: StringOperationFilterInput
  tariff_cleaning_guid: StringOperationFilterInput
  temp_min: FloatOperationFilterInput
  temp_max: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  labour: FloatOperationFilterInput
  tariff_cleaning: tariff_cleaningFilterInput
  steaming_part: ListFilterInputTypeOfsteaming_partFilterInput
  package_steaming: package_steamingFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input steaming_exclusiveInput {
  guid: String!
  tariff_cleaning_guid: String!
  temp_min: Float
  temp_max: Float
  remarks: String
  labour: Float
  tariff_cleaning: tariff_cleaningInput
  steaming_part: [steaming_partInput]
  package_steaming: package_steamingInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input steaming_exclusiveSortInput {
  guid: SortEnumType
  tariff_cleaning_guid: SortEnumType
  temp_min: SortEnumType
  temp_max: SortEnumType
  remarks: SortEnumType
  labour: SortEnumType
  tariff_cleaning: tariff_cleaningSortInput
  package_steaming: package_steamingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input steaming_partFilterInput {
  and: [steaming_partFilterInput!]
  or: [steaming_partFilterInput!]
  guid: StringOperationFilterInput
  steaming_guid: StringOperationFilterInput
  tariff_steaming_guid: StringOperationFilterInput
  steaming_exclusive_guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  description: StringOperationFilterInput
  quantity: IntOperationFilterInput
  cost: FloatOperationFilterInput
  labour: FloatOperationFilterInput
  approve_part: BooleanOperationFilterInput
  approve_qty: IntOperationFilterInput
  approve_labour: FloatOperationFilterInput
  approve_cost: FloatOperationFilterInput
  complete_dt: LongOperationFilterInput
  action: StringOperationFilterInput
  steaming: steamingFilterInput
  tariff_steaming: tariff_steamingFilterInput
  steaming_exclusive: steaming_exclusiveFilterInput
  job_order: job_orderFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input steaming_partInput {
  guid: String
  steaming_guid: String
  tariff_steaming_guid: String
  steaming_exclusive_guid: String
  job_order_guid: String
  description: String
  quantity: Int
  cost: Float
  labour: Float
  approve_part: Boolean
  approve_qty: Int
  approve_labour: Float
  approve_cost: Float
  complete_dt: Long
  action: String!
  steaming: steamingInput
  tariff_steaming: tariff_steamingInput
  steaming_exclusive: steaming_exclusiveInput
  job_order: job_orderInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input steaming_partSortInput {
  guid: SortEnumType
  steaming_guid: SortEnumType
  tariff_steaming_guid: SortEnumType
  steaming_exclusive_guid: SortEnumType
  job_order_guid: SortEnumType
  description: SortEnumType
  quantity: SortEnumType
  cost: SortEnumType
  labour: SortEnumType
  approve_part: SortEnumType
  approve_qty: SortEnumType
  approve_labour: SortEnumType
  approve_cost: SortEnumType
  complete_dt: SortEnumType
  action: SortEnumType
  steaming: steamingSortInput
  tariff_steaming: tariff_steamingSortInput
  steaming_exclusive: steaming_exclusiveSortInput
  job_order: job_orderSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input steaming_tempFilterInput {
  and: [steaming_tempFilterInput!]
  or: [steaming_tempFilterInput!]
  guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  meter_temp: FloatOperationFilterInput
  top_temp: FloatOperationFilterInput
  bottom_temp: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  report_dt: LongOperationFilterInput
  job_order: job_orderFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input steaming_tempInput {
  guid: String
  job_order_guid: String
  meter_temp: Float
  top_temp: Float
  bottom_temp: Float
  remarks: String
  report_dt: Long
  job_order: job_orderInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input steaming_tempSortInput {
  guid: SortEnumType
  job_order_guid: SortEnumType
  meter_temp: SortEnumType
  top_temp: SortEnumType
  bottom_temp: SortEnumType
  remarks: SortEnumType
  report_dt: SortEnumType
  job_order: job_orderSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input storing_orderFilterInput {
  and: [storing_orderFilterInput!]
  or: [storing_orderFilterInput!]
  guid: StringOperationFilterInput
  so_no: StringOperationFilterInput
  so_notes: StringOperationFilterInput
  haulier: StringOperationFilterInput
  remarks: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  customer_company: customer_companyFilterInput
  storing_order_tank: ListFilterInputTypeOfstoring_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input storing_orderInput {
  guid: String
  so_no: String
  so_notes: String
  haulier: String
  remarks: String
  status_cv: String
  customer_company_guid: String
  customer_company: customer_companyInput
  storing_order_tank: [storing_order_tankInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input storing_orderSortInput {
  guid: SortEnumType
  so_no: SortEnumType
  so_notes: SortEnumType
  haulier: SortEnumType
  remarks: SortEnumType
  status_cv: SortEnumType
  customer_company_guid: SortEnumType
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input storing_order_tankFilterInput {
  and: [storing_order_tankFilterInput!]
  or: [storing_order_tankFilterInput!]
  guid: StringOperationFilterInput
  so_guid: StringOperationFilterInput
  unit_type_guid: StringOperationFilterInput
  last_cargo_guid: StringOperationFilterInput
  last_test_guid: StringOperationFilterInput
  owner_guid: StringOperationFilterInput
  tank_no: StringOperationFilterInput
  job_no: StringOperationFilterInput
  preinspect_job_no: StringOperationFilterInput
  liftoff_job_no: StringOperationFilterInput
  lifton_job_no: StringOperationFilterInput
  takein_job_no: StringOperationFilterInput
  release_job_no: StringOperationFilterInput
  eta_dt: LongOperationFilterInput
  purpose_steam: BooleanOperationFilterInput
  purpose_storage: BooleanOperationFilterInput
  purpose_cleaning: BooleanOperationFilterInput
  purpose_repair_cv: StringOperationFilterInput
  required_temp: FloatOperationFilterInput
  clean_status_cv: StringOperationFilterInput
  estimate_cv: StringOperationFilterInput
  certificate_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  etr_dt: LongOperationFilterInput
  status_cv: StringOperationFilterInput
  tank_status_cv: StringOperationFilterInput
  tank_note: StringOperationFilterInput
  release_note: StringOperationFilterInput
  cleaning_remarks: StringOperationFilterInput
  steaming_remarks: StringOperationFilterInput
  repair_remarks: StringOperationFilterInput
  storage_remarks: StringOperationFilterInput
  last_release_dt: LongOperationFilterInput
  storing_order: storing_orderFilterInput
  tariff_cleaning: tariff_cleaningFilterInput
  customer_company: customer_companyFilterInput
  tank_info: tank_infoFilterInput
  tank: tankFilterInput
  in_gate: ListFilterInputTypeOfin_gateFilterInput
  out_gate: ListFilterInputTypeOfout_gateFilterInput
  booking: ListFilterInputTypeOfbookingFilterInput
  scheduling_sot: ListFilterInputTypeOfscheduling_sotFilterInput
  release_order_sot: ListFilterInputTypeOfrelease_order_sotFilterInput
  repair: ListFilterInputTypeOfrepairFilterInput
  residue: ListFilterInputTypeOfresidueFilterInput
  cleaning: ListFilterInputTypeOfcleaningFilterInput
  steaming: ListFilterInputTypeOfsteamingFilterInput
  survey_detail: ListFilterInputTypeOfsurvey_detailFilterInput
  transfer: ListFilterInputTypeOftransferFilterInput
  billing_sot: ListFilterInputTypeOfbilling_sotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input storing_order_tankInput {
  guid: String
  so_guid: String
  unit_type_guid: String
  last_cargo_guid: String
  last_test_guid: String
  owner_guid: String
  tank_no: String
  job_no: String
  preinspect_job_no: String
  liftoff_job_no: String
  lifton_job_no: String
  takein_job_no: String
  release_job_no: String
  eta_dt: Long
  purpose_steam: Boolean
  purpose_storage: Boolean
  purpose_cleaning: Boolean
  purpose_repair_cv: String
  required_temp: Float
  clean_status_cv: String
  estimate_cv: String
  certificate_cv: String
  remarks: String
  etr_dt: Long
  status_cv: String
  tank_status_cv: String
  tank_note: String
  release_note: String
  cleaning_remarks: String
  steaming_remarks: String
  repair_remarks: String
  storage_remarks: String
  last_release_dt: Long
  storing_order: storing_orderInput
  tariff_cleaning: tariff_cleaningInput
  customer_company: customer_companyInput
  tank_info: tank_infoInput
  tank: tankInput
  in_gate: [in_gateInput!]
  out_gate: [out_gateInput!]
  booking: [bookingInput!]
  scheduling_sot: [scheduling_sotInput!]
  release_order_sot: [release_order_sotInput!]
  repair: [repairInput!]
  residue: [residueInput]
  cleaning: [cleaningInput]
  steaming: [steamingInput]
  survey_detail: [survey_detailInput]
  transfer: [transferInput]
  billing_sot: [billing_sotInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input storing_order_tankSortInput {
  guid: SortEnumType
  so_guid: SortEnumType
  unit_type_guid: SortEnumType
  last_cargo_guid: SortEnumType
  last_test_guid: SortEnumType
  owner_guid: SortEnumType
  tank_no: SortEnumType
  job_no: SortEnumType
  preinspect_job_no: SortEnumType
  liftoff_job_no: SortEnumType
  lifton_job_no: SortEnumType
  takein_job_no: SortEnumType
  release_job_no: SortEnumType
  eta_dt: SortEnumType
  purpose_steam: SortEnumType
  purpose_storage: SortEnumType
  purpose_cleaning: SortEnumType
  purpose_repair_cv: SortEnumType
  required_temp: SortEnumType
  clean_status_cv: SortEnumType
  estimate_cv: SortEnumType
  certificate_cv: SortEnumType
  remarks: SortEnumType
  etr_dt: SortEnumType
  status_cv: SortEnumType
  tank_status_cv: SortEnumType
  tank_note: SortEnumType
  release_note: SortEnumType
  cleaning_remarks: SortEnumType
  steaming_remarks: SortEnumType
  repair_remarks: SortEnumType
  storage_remarks: SortEnumType
  last_release_dt: SortEnumType
  storing_order: storing_orderSortInput
  tariff_cleaning: tariff_cleaningSortInput
  customer_company: customer_companySortInput
  tank_info: tank_infoSortInput
  tank: tankSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input survey_detailFilterInput {
  and: [survey_detailFilterInput!]
  or: [survey_detailFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  status_cv: StringOperationFilterInput
  survey_type_cv: StringOperationFilterInput
  test_type_cv: StringOperationFilterInput
  test_class_cv: StringOperationFilterInput
  remarks: StringOperationFilterInput
  survey_dt: LongOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input survey_detailInput {
  guid: String
  sot_guid: String!
  status_cv: String!
  survey_type_cv: String!
  test_type_cv: String
  test_class_cv: String
  remarks: String
  survey_dt: Long!
  storing_order_tank: storing_order_tankInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tankFilterInput {
  and: [tankFilterInput!]
  or: [tankFilterInput!]
  guid: StringOperationFilterInput
  tariff_depot_guid: StringOperationFilterInput
  unit_type: StringOperationFilterInput
  description: StringOperationFilterInput
  tariff_depot: tariff_depotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tankInput {
  guid: String
  tariff_depot_guid: String
  unit_type: String
  description: String
  tariff_depot: tariff_depotInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tankSortInput {
  guid: SortEnumType
  tariff_depot_guid: SortEnumType
  unit_type: SortEnumType
  description: SortEnumType
  tariff_depot: tariff_depotSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tank_infoFilterInput {
  and: [tank_infoFilterInput!]
  or: [tank_infoFilterInput!]
  guid: StringOperationFilterInput
  tank_no: StringOperationFilterInput
  owner_guid: StringOperationFilterInput
  unit_type_guid: StringOperationFilterInput
  tank_comp_guid: StringOperationFilterInput
  manufacturer_cv: StringOperationFilterInput
  dom_dt: LongOperationFilterInput
  cladding_cv: StringOperationFilterInput
  max_weight_cv: StringOperationFilterInput
  height_cv: StringOperationFilterInput
  walkway_cv: StringOperationFilterInput
  capacity: IntOperationFilterInput
  tare_weight: IntOperationFilterInput
  last_test_cv: StringOperationFilterInput
  next_test_cv: StringOperationFilterInput
  test_dt: LongOperationFilterInput
  test_class_cv: StringOperationFilterInput
  last_notify_dt: LongOperationFilterInput
  last_release_dt: LongOperationFilterInput
  yard_cv: StringOperationFilterInput
  tank: tankFilterInput
  customer_company: customer_companyFilterInput
  tariff_buffer: tariff_bufferFilterInput
  storing_order_tank: ListFilterInputTypeOfstoring_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tank_infoInput {
  guid: String
  tank_no: String!
  owner_guid: String
  unit_type_guid: String
  tank_comp_guid: String
  manufacturer_cv: String
  dom_dt: Long
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  capacity: Int
  tare_weight: Int
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  last_notify_dt: Long
  last_release_dt: Long
  yard_cv: String
  tank: tankInput
  customer_company: customer_companyInput
  tariff_buffer: tariff_bufferInput
  storing_order_tank: [storing_order_tankInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tank_infoSortInput {
  guid: SortEnumType
  tank_no: SortEnumType
  owner_guid: SortEnumType
  unit_type_guid: SortEnumType
  tank_comp_guid: SortEnumType
  manufacturer_cv: SortEnumType
  dom_dt: SortEnumType
  cladding_cv: SortEnumType
  max_weight_cv: SortEnumType
  height_cv: SortEnumType
  walkway_cv: SortEnumType
  capacity: SortEnumType
  tare_weight: SortEnumType
  last_test_cv: SortEnumType
  next_test_cv: SortEnumType
  test_dt: SortEnumType
  test_class_cv: SortEnumType
  last_notify_dt: SortEnumType
  last_release_dt: SortEnumType
  yard_cv: SortEnumType
  tank: tankSortInput
  customer_company: customer_companySortInput
  tariff_buffer: tariff_bufferSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_bufferFilterInput {
  and: [tariff_bufferFilterInput!]
  or: [tariff_bufferFilterInput!]
  guid: StringOperationFilterInput
  buffer_type: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  package_buffer: ListFilterInputTypeOfpackage_bufferFilterInput
  in_gate_survey: ListFilterInputTypeOfin_gate_surveyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_bufferInput {
  guid: String!
  buffer_type: String
  cost: Float
  remarks: String
  package_buffer: [package_bufferInput]
  in_gate_survey: [in_gate_surveyInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_bufferSortInput {
  guid: SortEnumType
  buffer_type: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_cleaningFilterInput {
  and: [tariff_cleaningFilterInput!]
  or: [tariff_cleaningFilterInput!]
  guid: StringOperationFilterInput
  cargo: StringOperationFilterInput
  alias: StringOperationFilterInput
  description: StringOperationFilterInput
  remarks: StringOperationFilterInput
  un_no: StringOperationFilterInput
  class_cv: StringOperationFilterInput
  cleaning_method_guid: StringOperationFilterInput
  cleaning_category_guid: StringOperationFilterInput
  msds_guid: StringOperationFilterInput
  flash_point: IntOperationFilterInput
  in_gate_alert: StringOperationFilterInput
  depot_note: StringOperationFilterInput
  hazard_level_cv: StringOperationFilterInput
  ban_type_cv: StringOperationFilterInput
  nature_cv: StringOperationFilterInput
  open_on_gate_cv: StringOperationFilterInput
  cleaning_method: cleaning_methodFilterInput
  cleaning_category: cleaning_categoryFilterInput
  storing_order_tank: ListFilterInputTypeOfstoring_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_cleaningInput {
  guid: String!
  cargo: String
  alias: String
  description: String
  remarks: String
  un_no: String
  class_cv: String
  cleaning_method_guid: String
  cleaning_category_guid: String
  msds_guid: String
  flash_point: Int
  in_gate_alert: String
  depot_note: String
  hazard_level_cv: String
  ban_type_cv: String
  nature_cv: String
  open_on_gate_cv: String
  cleaning_method: cleaning_methodInput
  cleaning_category: cleaning_categoryInput
  storing_order_tank: [storing_order_tankInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_cleaningSortInput {
  guid: SortEnumType
  cargo: SortEnumType
  alias: SortEnumType
  description: SortEnumType
  remarks: SortEnumType
  un_no: SortEnumType
  class_cv: SortEnumType
  cleaning_method_guid: SortEnumType
  cleaning_category_guid: SortEnumType
  msds_guid: SortEnumType
  flash_point: SortEnumType
  in_gate_alert: SortEnumType
  depot_note: SortEnumType
  hazard_level_cv: SortEnumType
  ban_type_cv: SortEnumType
  nature_cv: SortEnumType
  open_on_gate_cv: SortEnumType
  cleaning_method: cleaning_methodSortInput
  cleaning_category: cleaning_categorySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_depotFilterInput {
  and: [tariff_depotFilterInput!]
  or: [tariff_depotFilterInput!]
  guid: StringOperationFilterInput
  profile_name: StringOperationFilterInput
  description: StringOperationFilterInput
  preinspection_cost: FloatOperationFilterInput
  gate_in_cost: FloatOperationFilterInput
  gate_out_cost: FloatOperationFilterInput
  lolo_cost: FloatOperationFilterInput
  storage_cost: FloatOperationFilterInput
  free_storage: IntOperationFilterInput
  tanks: ListFilterInputTypeOftankFilterInput
  package_depot: ListFilterInputTypeOfpackage_depotFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_depotInput {
  guid: String
  profile_name: String
  description: String
  preinspection_cost: Float
  gate_in_cost: Float
  gate_out_cost: Float
  lolo_cost: Float
  storage_cost: Float
  free_storage: Int
  tanks: [tankInput]
  package_depot: [package_depotInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_depotSortInput {
  guid: SortEnumType
  profile_name: SortEnumType
  description: SortEnumType
  preinspection_cost: SortEnumType
  gate_in_cost: SortEnumType
  gate_out_cost: SortEnumType
  lolo_cost: SortEnumType
  storage_cost: SortEnumType
  free_storage: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_repairFilterInput {
  and: [tariff_repairFilterInput!]
  or: [tariff_repairFilterInput!]
  guid: StringOperationFilterInput
  group_name_cv: StringOperationFilterInput
  subgroup_name_cv: StringOperationFilterInput
  part_name: StringOperationFilterInput
  alias: StringOperationFilterInput
  dimension: StringOperationFilterInput
  height_diameter: FloatOperationFilterInput
  height_diameter_unit_cv: StringOperationFilterInput
  width_diameter: FloatOperationFilterInput
  width_diameter_unit_cv: StringOperationFilterInput
  thickness: FloatOperationFilterInput
  thickness_unit_cv: StringOperationFilterInput
  length: FloatOperationFilterInput
  length_unit_cv: StringOperationFilterInput
  labour_hour: FloatOperationFilterInput
  material_cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  template_est_part: ListFilterInputTypeOftemplate_est_partFilterInput
  repair_part: ListFilterInputTypeOfrepair_partFilterInput
  package_repair: ListFilterInputTypeOfpackage_repairFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_repairInput {
  guid: String!
  group_name_cv: String
  subgroup_name_cv: String
  part_name: String
  alias: String
  dimension: String
  height_diameter: Float
  height_diameter_unit_cv: String
  width_diameter: Float
  width_diameter_unit_cv: String
  thickness: Float
  thickness_unit_cv: String
  length: Float
  length_unit_cv: String
  labour_hour: Float
  material_cost: Float
  remarks: String
  template_est_part: [template_est_partInput!]
  repair_part: [repair_partInput!]
  package_repair: [package_repairInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_residueFilterInput {
  and: [tariff_residueFilterInput!]
  or: [tariff_residueFilterInput!]
  guid: StringOperationFilterInput
  description: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  package_residue: ListFilterInputTypeOfpackage_residueFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_residueInput {
  guid: String!
  description: String
  cost: Float
  remarks: String
  package_residue: [package_residueInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_steamingFilterInput {
  and: [tariff_steamingFilterInput!]
  or: [tariff_steamingFilterInput!]
  guid: StringOperationFilterInput
  temp_min: FloatOperationFilterInput
  temp_max: FloatOperationFilterInput
  cost: FloatOperationFilterInput
  labour: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  package_steaming: ListFilterInputTypeOfpackage_steamingFilterInput
  steaming_part: ListFilterInputTypeOfsteaming_partFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_steamingInput {
  guid: String!
  temp_min: Float
  temp_max: Float
  cost: Float
  labour: Float
  remarks: String
  package_steaming: [package_steamingInput]
  steaming_part: [steaming_partInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_steamingSortInput {
  guid: SortEnumType
  temp_min: SortEnumType
  temp_max: SortEnumType
  cost: SortEnumType
  labour: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input teamFilterInput {
  and: [teamFilterInput!]
  or: [teamFilterInput!]
  guid: StringOperationFilterInput
  description: StringOperationFilterInput
  department_cv: StringOperationFilterInput
  job_order: ListFilterInputTypeOfjob_orderFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input teamInput {
  guid: String
  description: String
  department_cv: String
  job_order: [job_orderInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input teamSortInput {
  guid: SortEnumType
  description: SortEnumType
  department_cv: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input template_estFilterInput {
  and: [template_estFilterInput!]
  or: [template_estFilterInput!]
  guid: StringOperationFilterInput
  type_cv: StringOperationFilterInput
  labour_cost_discount: FloatOperationFilterInput
  material_cost_discount: FloatOperationFilterInput
  template_name: StringOperationFilterInput
  remarks: StringOperationFilterInput
  template_est_customer: ListFilterInputTypeOftemplate_est_customerFilterInput
  template_est_part: ListFilterInputTypeOftemplate_est_partFilterInput
  customer_company: ListFilterInputTypeOfcustomer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input template_estInput {
  guid: String
  type_cv: String!
  labour_cost_discount: Float!
  material_cost_discount: Float!
  template_name: String!
  remarks: String
  template_est_customer: [template_est_customerInput!]
  template_est_part: [template_est_partInput!]
  customer_company: [customer_companyInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input template_estSortInput {
  guid: SortEnumType
  type_cv: SortEnumType
  labour_cost_discount: SortEnumType
  material_cost_discount: SortEnumType
  template_name: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input template_est_customerFilterInput {
  and: [template_est_customerFilterInput!]
  or: [template_est_customerFilterInput!]
  guid: StringOperationFilterInput
  template_est_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  action: StringOperationFilterInput
  template_est: template_estFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input template_est_customerInput {
  guid: String
  template_est_guid: String
  customer_company_guid: String
  action: String
  template_est: template_estInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input template_est_partFilterInput {
  and: [template_est_partFilterInput!]
  or: [template_est_partFilterInput!]
  guid: StringOperationFilterInput
  template_est_guid: StringOperationFilterInput
  tariff_repair_guid: StringOperationFilterInput
  description: StringOperationFilterInput
  location_cv: StringOperationFilterInput
  comment: StringOperationFilterInput
  remarks: StringOperationFilterInput
  quantity: IntOperationFilterInput
  hour: FloatOperationFilterInput
  action: StringOperationFilterInput
  template_est: template_estFilterInput
  tariff_repair: tariff_repairFilterInput
  tep_damage_repair: ListFilterInputTypeOftep_damage_repairFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input template_est_partInput {
  guid: String
  template_est_guid: String
  tariff_repair_guid: String!
  description: String
  location_cv: String
  comment: String
  remarks: String
  quantity: Int
  hour: Float
  action: String
  template_est: template_estInput
  tariff_repair: tariff_repairInput
  tep_damage_repair: [tep_damage_repairInput!]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tep_damage_repairFilterInput {
  and: [tep_damage_repairFilterInput!]
  or: [tep_damage_repairFilterInput!]
  guid: StringOperationFilterInput
  tep_guid: StringOperationFilterInput
  code_cv: StringOperationFilterInput
  code_type: IntOperationFilterInput
  action: StringOperationFilterInput
  template_est_part: template_est_partFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tep_damage_repairInput {
  guid: String
  tep_guid: String
  code_cv: String!
  code_type: Int!
  action: String
  template_est_part: template_est_partInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input time_tableFilterInput {
  and: [time_tableFilterInput!]
  or: [time_tableFilterInput!]
  guid: StringOperationFilterInput
  job_order_guid: StringOperationFilterInput
  start_time: LongOperationFilterInput
  stop_time: LongOperationFilterInput
  job_order: job_orderFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input time_tableInput {
  guid: String
  job_order_guid: String
  start_time: Long
  stop_time: Long
  job_order: job_orderInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input transferFilterInput {
  and: [transferFilterInput!]
  or: [transferFilterInput!]
  guid: StringOperationFilterInput
  sot_guid: StringOperationFilterInput
  location_from_cv: StringOperationFilterInput
  location_to_cv: StringOperationFilterInput
  transfer_out_dt: LongOperationFilterInput
  transfer_in_dt: LongOperationFilterInput
  haulier: StringOperationFilterInput
  vehicle_no: StringOperationFilterInput
  driver_name: StringOperationFilterInput
  remarks: StringOperationFilterInput
  action: StringOperationFilterInput
  storing_order_tank: storing_order_tankFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input transferInput {
  guid: String
  sot_guid: String!
  location_from_cv: String
  location_to_cv: String
  transfer_out_dt: Long
  transfer_in_dt: Long
  haulier: String
  vehicle_no: String
  driver_name: String
  remarks: String
  action: String
  storing_order_tank: storing_order_tankInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input transferSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  location_from_cv: SortEnumType
  location_to_cv: SortEnumType
  transfer_out_dt: SortEnumType
  transfer_in_dt: SortEnumType
  haulier: SortEnumType
  vehicle_no: SortEnumType
  driver_name: SortEnumType
  remarks: SortEnumType
  action: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

enum SortEnumType {
  ASC
  DESC
}

"""A connection to a list of items."""
type QueryBookingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryBookingEdge!]

  """A flattened list of the nodes."""
  nodes: [booking!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryBookingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: booking!
}

"""A connection to a list of items."""
type QueryCodeValuesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCodeValuesEdge!]

  """A flattened list of the nodes."""
  nodes: [code_values!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCodeValuesEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: code_values!
}

"""A connection to a list of items."""
type QueryInGateSurveyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryInGateSurveyEdge!]

  """A flattened list of the nodes."""
  nodes: [in_gate_survey!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryInGateSurveyEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: in_gate_survey!
}

"""A connection to a list of items."""
type QueryInGatesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryInGatesEdge!]

  """A flattened list of the nodes."""
  nodes: [in_gate!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""A connection to a list of items."""
type QueryInGatesCountConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryInGatesCountEdge!]

  """A flattened list of the nodes."""
  nodes: [in_gate!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryInGatesCountEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: in_gate!
}

"""An edge in a connection."""
type QueryInGatesEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: in_gate!
}

"""A connection to a list of items."""
type QueryOutGateSurveyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryOutGateSurveyEdge!]

  """A flattened list of the nodes."""
  nodes: [out_gate_survey!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryOutGateSurveyEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: out_gate_survey!
}

"""A connection to a list of items."""
type QueryOutGatesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryOutGatesEdge!]

  """A flattened list of the nodes."""
  nodes: [out_gate!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryOutGatesEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: out_gate!
}

"""A connection to a list of items."""
type QueryReleaseOrderConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryReleaseOrderEdge!]

  """A flattened list of the nodes."""
  nodes: [release_order!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryReleaseOrderEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: release_order!
}

"""A connection to a list of items."""
type QueryReleaseOrderSOTConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryReleaseOrderSOTEdge!]

  """A flattened list of the nodes."""
  nodes: [release_order_sot!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryReleaseOrderSOTEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: release_order_sot!
}

"""A connection to a list of items."""
type QuerySchedulingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySchedulingEdge!]

  """A flattened list of the nodes."""
  nodes: [scheduling!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySchedulingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: scheduling!
}

"""A connection to a list of items."""
type QuerySchedulingSOTConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySchedulingSOTEdge!]

  """A flattened list of the nodes."""
  nodes: [scheduling_sot!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySchedulingSOTEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: scheduling_sot!
}

"""A connection to a list of items."""
type QueryStoringOrderConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryStoringOrderEdge!]

  """A flattened list of the nodes."""
  nodes: [storing_order!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryStoringOrderEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: storing_order!
}

"""A connection to a list of items."""
type QueryStoringOrderTankConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryStoringOrderTankEdge!]

  """A flattened list of the nodes."""
  nodes: [storing_order_tank!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""A connection to a list of items."""
type QueryStoringOrderTankCountConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryStoringOrderTankCountEdge!]

  """A flattened list of the nodes."""
  nodes: [storing_order_tank!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryStoringOrderTankCountEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: storing_order_tank!
}

"""An edge in a connection."""
type QueryStoringOrderTankEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: storing_order_tank!
}

"""A connection to a list of items."""
type QuerySurveyDetailConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySurveyDetailEdge!]

  """A flattened list of the nodes."""
  nodes: [survey_detail!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySurveyDetailEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: survey_detail!
}

"""A connection to a list of items."""
type QueryTankInfoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTankInfoEdge!]

  """A flattened list of the nodes."""
  nodes: [tank_info!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTankInfoEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tank_info!
}

"""A connection to a list of items."""
type QueryTransferConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTransferEdge!]

  """A flattened list of the nodes."""
  nodes: [transfer!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTransferEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: transfer!
}

type Record {
  affected: Int!
  guid: [String!]!
}

type code_values {
  guid: String
  description: String
  code_val_type: String
  code_val: String
  child_code: String
  sequence: Int
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input BookingRequestInput {
  guid: String
  sot_guid: [String!]!
  test_class_cv: String
  reference: String
  book_type_cv: String!
  status_cv: String
  remarks: String
  booking_dt: Long!
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input CodeValuesRequestInput {
  guid: String
  description: String
  code_val_type: String!
  code_val: String
  child_code: String
  sequence: Int
}

input InGateSurveyRequestInput {
  guid: String
  in_gate_guid: String!
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input OutGateRequestInput {
  guid: String
  so_tank_guid: String
  haulier: String
  eir_no: String
  eir_status_cv: String
  vehicle_no: String
  yard_cv: String
  driver_name: String
  lolo_cv: String
  preinspection_cv: String
  eir_dt: Long
  remarks: String
  tank: storing_order_tankInput
  out_gate_survey: out_gate_surveyInput
  release_order: release_orderInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input OutGateSurveyRequestInput {
  guid: String
  out_gate_guid: String!
  capacity: Int
  tare_weight: Int
  take_in_reference: String
  last_test_cv: String
  next_test_cv: String
  test_dt: Long
  test_class_cv: String
  dom_dt: Long
  inspection_dt: Long
  last_release_dt: Long
  manufacturer_cv: String
  cladding_cv: String
  max_weight_cv: String
  height_cv: String
  walkway_cv: String
  tank_comp_guid: String
  btm_dis_comp_cv: String
  btm_dis_valve_cv: String
  btm_dis_valve_spec_cv: String
  btm_valve_brand_cv: String
  top_dis_comp_cv: String
  top_dis_valve_cv: String
  top_dis_valve_spec_cv: String
  top_valve_brand_cv: String
  manlid_comp_cv: String
  foot_valve_cv: String
  thermometer: Int
  thermometer_cv: String
  ladder: Boolean
  data_csc_transportplate: Boolean
  airline_valve_pcs: Int
  airline_valve_dim: Float
  airline_valve_cv: String
  airline_valve_conn_cv: String
  airline_valve_conn_spec_cv: String
  manlid_cover_cv: String
  manlid_cover_pcs: Int
  manlid_cover_pts: Int
  manlid_seal_cv: String
  pv_type_cv: String
  pv_spec_cv: String
  pv_type_pcs: Int
  pv_spec_pcs: Int
  safety_handrail: Boolean
  buffer_plate: Int
  dipstick: Boolean
  residue: Float
  comments: String
  top_coord: String
  bottom_coord: String
  front_coord: String
  rear_coord: String
  left_coord: String
  right_coord: String
  top_remarks: String
  bottom_remarks: String
  front_remarks: String
  rear_remarks: String
  left_remarks: String
  right_remarks: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input PeriodicTestRequestInput {
  tank_no: String!
  last_test_cv: String!
  next_test_cv: String!
}

input PurposeChangesInput {
  type: String!
  action: String!
}

input ReleaseOrderRequestInput {
  guid: String
  ro_no: String
  ro_notes: String
  haulier: String
  remarks: String
  status_cv: String
  customer_company_guid: String
  ro_generated: Boolean
  release_dt: Long
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input ReleaseOrderSOTRequestInput {
  guid: String
  ro_guid: String
  sot_guid: String
  status_cv: String
  remarks: String
  action: String
  storing_order_tank: storing_order_tankInput!
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input SchedulingRequestInput {
  guid: String
  status_cv: String
  book_type_cv: String
  remarks: String
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input SchedulingSOTRequestInput {
  guid: String
  sot_guid: String
  scheduling_guid: String
  scheduling_dt: Long
  reference: String
  status_cv: String
  remarks: String
  action: String
  storing_order_tank: storing_order_tankInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input StoringOrderRequestInput {
  guid: String
  customer_company_guid: String!
  status_cv: String
  haulier: String
  so_no: String
  so_notes: String
  remarks: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input StoringOrderTankRequestInput {
  guid: String
  so_guid: String
  unit_type_guid: String
  last_cargo_guid: String
  last_test_guid: String
  owner_guid: String
  tank_no: String
  job_no: String
  preinspect_job_no: String
  liftoff_job_no: String
  lifton_job_no: String
  takein_job_no: String
  release_job_no: String
  purpose_storage: Boolean
  purpose_steam: Boolean
  purpose_cleaning: Boolean
  required_temp: Float
  remarks: String
  purpose_repair_cv: String
  clean_status_cv: String
  certificate_cv: String
  status_cv: String
  tank_status_cv: String
  estimate_cv: String
  eta_dt: Long
  etr_dt: Long
  tank_note: String
  release_note: String
  cleaning_remarks: String
  steaming_remarks: String
  repair_remarks: String
  storage_remarks: String
  action: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input TankPurposeRequestInput {
  guid: String
  storing_order_tank: storing_order_tankInput!
  tank_comp_guid: String!
  job_no: String
  in_gate_dt: Long!
  purpose_changes: [PurposeChangesInput!]!
}

input bookingSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  test_class_cv: SortEnumType
  reference: SortEnumType
  book_type_cv: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  booking_dt: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input code_valuesFilterInput {
  and: [code_valuesFilterInput!]
  or: [code_valuesFilterInput!]
  guid: StringOperationFilterInput
  description: StringOperationFilterInput
  code_val_type: StringOperationFilterInput
  code_val: StringOperationFilterInput
  child_code: StringOperationFilterInput
  sequence: IntOperationFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input code_valuesSortInput {
  guid: SortEnumType
  description: SortEnumType
  code_val_type: SortEnumType
  code_val: SortEnumType
  child_code: SortEnumType
  sequence: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input in_gateSortInput {
  guid: SortEnumType
  so_tank_guid: SortEnumType
  haulier: SortEnumType
  eir_no: SortEnumType
  eir_status_cv: SortEnumType
  vehicle_no: SortEnumType
  yard_cv: SortEnumType
  driver_name: SortEnumType
  lolo_cv: SortEnumType
  preinspection_cv: SortEnumType
  eir_dt: SortEnumType
  remarks: SortEnumType
  publish_by: SortEnumType
  publish_dt: SortEnumType
  in_gate_survey: in_gate_surveySortInput
  tank: storing_order_tankSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input in_gate_surveySortInput {
  guid: SortEnumType
  in_gate_guid: SortEnumType
  capacity: SortEnumType
  tare_weight: SortEnumType
  take_in_reference: SortEnumType
  last_test_cv: SortEnumType
  next_test_cv: SortEnumType
  test_dt: SortEnumType
  test_class_cv: SortEnumType
  dom_dt: SortEnumType
  inspection_dt: SortEnumType
  last_release_dt: SortEnumType
  manufacturer_cv: SortEnumType
  cladding_cv: SortEnumType
  max_weight_cv: SortEnumType
  height_cv: SortEnumType
  walkway_cv: SortEnumType
  tank_comp_guid: SortEnumType
  btm_dis_comp_cv: SortEnumType
  btm_dis_valve_cv: SortEnumType
  btm_dis_valve_spec_cv: SortEnumType
  btm_valve_brand_cv: SortEnumType
  top_dis_comp_cv: SortEnumType
  top_dis_valve_cv: SortEnumType
  top_dis_valve_spec_cv: SortEnumType
  top_valve_brand_cv: SortEnumType
  manlid_comp_cv: SortEnumType
  foot_valve_cv: SortEnumType
  thermometer: SortEnumType
  thermometer_cv: SortEnumType
  ladder: SortEnumType
  data_csc_transportplate: SortEnumType
  airline_valve_pcs: SortEnumType
  airline_valve_dim: SortEnumType
  airline_valve_cv: SortEnumType
  airline_valve_conn_cv: SortEnumType
  airline_valve_conn_spec_cv: SortEnumType
  manlid_cover_cv: SortEnumType
  manlid_cover_pcs: SortEnumType
  manlid_cover_pts: SortEnumType
  manlid_seal_cv: SortEnumType
  pv_type_cv: SortEnumType
  pv_spec_cv: SortEnumType
  pv_type_pcs: SortEnumType
  pv_spec_pcs: SortEnumType
  safety_handrail: SortEnumType
  buffer_plate: SortEnumType
  dipstick: SortEnumType
  residue: SortEnumType
  comments: SortEnumType
  top_coord: SortEnumType
  bottom_coord: SortEnumType
  front_coord: SortEnumType
  rear_coord: SortEnumType
  left_coord: SortEnumType
  right_coord: SortEnumType
  top_remarks: SortEnumType
  bottom_remarks: SortEnumType
  front_remarks: SortEnumType
  rear_remarks: SortEnumType
  left_remarks: SortEnumType
  right_remarks: SortEnumType
  in_gate: in_gateSortInput
  tariff_buffer: tariff_bufferSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input out_gateSortInput {
  guid: SortEnumType
  so_tank_guid: SortEnumType
  haulier: SortEnumType
  eir_no: SortEnumType
  eir_dt: SortEnumType
  eir_status_cv: SortEnumType
  vehicle_no: SortEnumType
  driver_name: SortEnumType
  remarks: SortEnumType
  publish_by: SortEnumType
  publish_dt: SortEnumType
  tank: storing_order_tankSortInput
  out_gate_survey: out_gate_surveySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input out_gate_surveySortInput {
  guid: SortEnumType
  out_gate_guid: SortEnumType
  capacity: SortEnumType
  tare_weight: SortEnumType
  take_in_reference: SortEnumType
  last_test_cv: SortEnumType
  next_test_cv: SortEnumType
  test_dt: SortEnumType
  test_class_cv: SortEnumType
  dom_dt: SortEnumType
  inspection_dt: SortEnumType
  last_release_dt: SortEnumType
  manufacturer_cv: SortEnumType
  cladding_cv: SortEnumType
  max_weight_cv: SortEnumType
  height_cv: SortEnumType
  walkway_cv: SortEnumType
  tank_comp_guid: SortEnumType
  btm_dis_comp_cv: SortEnumType
  btm_dis_valve_cv: SortEnumType
  btm_dis_valve_spec_cv: SortEnumType
  btm_valve_brand_cv: SortEnumType
  top_dis_comp_cv: SortEnumType
  top_dis_valve_cv: SortEnumType
  top_dis_valve_spec_cv: SortEnumType
  top_valve_brand_cv: SortEnumType
  manlid_comp_cv: SortEnumType
  foot_valve_cv: SortEnumType
  thermometer: SortEnumType
  thermometer_cv: SortEnumType
  ladder: SortEnumType
  data_csc_transportplate: SortEnumType
  airline_valve_pcs: SortEnumType
  airline_valve_dim: SortEnumType
  airline_valve_cv: SortEnumType
  airline_valve_conn_cv: SortEnumType
  airline_valve_conn_spec_cv: SortEnumType
  manlid_cover_cv: SortEnumType
  manlid_cover_pcs: SortEnumType
  manlid_cover_pts: SortEnumType
  manlid_seal_cv: SortEnumType
  pv_type_cv: SortEnumType
  pv_spec_cv: SortEnumType
  pv_type_pcs: SortEnumType
  pv_spec_pcs: SortEnumType
  safety_handrail: SortEnumType
  buffer_plate: SortEnumType
  dipstick: SortEnumType
  residue: SortEnumType
  comments: SortEnumType
  top_coord: SortEnumType
  bottom_coord: SortEnumType
  front_coord: SortEnumType
  rear_coord: SortEnumType
  left_coord: SortEnumType
  right_coord: SortEnumType
  top_remarks: SortEnumType
  bottom_remarks: SortEnumType
  front_remarks: SortEnumType
  rear_remarks: SortEnumType
  left_remarks: SortEnumType
  right_remarks: SortEnumType
  out_gate: out_gateSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input release_orderSortInput {
  guid: SortEnumType
  ro_no: SortEnumType
  ro_notes: SortEnumType
  haulier: SortEnumType
  remarks: SortEnumType
  status_cv: SortEnumType
  customer_company_guid: SortEnumType
  ro_generated: SortEnumType
  release_dt: SortEnumType
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input release_order_sotSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  ro_guid: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  release_order: release_orderSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input schedulingSortInput {
  guid: SortEnumType
  status_cv: SortEnumType
  book_type_cv: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input scheduling_sotSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  scheduling_guid: SortEnumType
  scheduling_dt: SortEnumType
  reference: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  scheduling: schedulingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input survey_detailSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  status_cv: SortEnumType
  survey_type_cv: SortEnumType
  test_type_cv: SortEnumType
  test_class_cv: SortEnumType
  remarks: SortEnumType
  survey_dt: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

"""A connection to a list of items."""
type QueryContactPersonConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryContactPersonEdge!]

  """A flattened list of the nodes."""
  nodes: [customer_company_contact_person!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryContactPersonEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: customer_company_contact_person!
}

"""A connection to a list of items."""
type QueryCurrencyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCurrencyEdge!]

  """A flattened list of the nodes."""
  nodes: [currency!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCurrencyEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: currency!
}

"""A connection to a list of items."""
type QueryCustomerCompanyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCustomerCompanyEdge!]

  """A flattened list of the nodes."""
  nodes: [customer_company!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCustomerCompanyEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: customer_company!
}

"""A connection to a list of items."""
type QueryTemplateEstimationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTemplateEstimationEdge!]

  """A flattened list of the nodes."""
  nodes: [template_est!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTemplateEstimationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: template_est!
}

input BillingBranchRequestInput {
  branchCustomer: CustomerRequestInput
  branchContactPerson: [customer_company_contact_personInput]
}

input CustomerRequestInput {
  guid: String
  currency_guid: String
  name: String!
  type_cv: String!
  code: String!
  address_line1: String
  address_line2: String
  city: String
  country: String
  postal: String
  phone: String
  email: String
  website: String
  effective_dt: Long
  agreement_due_dt: Long
  def_template_guid: String
  remarks: String
  def_tank_guid: String
  main_customer_guid: String
  action: String
}

input customer_company_contact_personSortInput {
  guid: SortEnumType
  customer_guid: SortEnumType
  name: SortEnumType
  title_cv: SortEnumType
  job_title: SortEnumType
  email: SortEnumType
  department: SortEnumType
  did: SortEnumType
  phone: SortEnumType
  email_alert: SortEnumType
  action: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

"""A connection to a list of items."""
type QueryPackageBufferConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageBufferEdge!]

  """A flattened list of the nodes."""
  nodes: [package_buffer]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageBufferEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_buffer
}

"""A connection to a list of items."""
type QueryPackageCleaningConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageCleaningEdge!]

  """A flattened list of the nodes."""
  nodes: [customer_company_cleaning_category]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageCleaningEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: customer_company_cleaning_category
}

"""A connection to a list of items."""
type QueryPackageDepotConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageDepotEdge!]

  """A flattened list of the nodes."""
  nodes: [package_depot]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageDepotEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_depot
}

"""A connection to a list of items."""
type QueryPackageLabourConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageLabourEdge!]

  """A flattened list of the nodes."""
  nodes: [package_labour]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageLabourEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_labour
}

"""A connection to a list of items."""
type QueryPackageRepairConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageRepairEdge!]

  """A flattened list of the nodes."""
  nodes: [package_repair]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageRepairEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_repair
}

"""A connection to a list of items."""
type QueryPackageResidueConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageResidueEdge!]

  """A flattened list of the nodes."""
  nodes: [package_residue]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageResidueEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_residue
}

"""A connection to a list of items."""
type QueryPackageSteamingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryPackageSteamingEdge!]

  """A flattened list of the nodes."""
  nodes: [package_steaming]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryPackageSteamingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: package_steaming
}

type customer_company_cleaning_category {
  guid: String
  customer_company_guid: String
  cleaning_category_guid: String
  initial_price: Float
  adjusted_price: Float
  remarks: String
  customer_company: customer_company
  cleaning_category: cleaning_category
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type package_labour {
  guid: String!
  tariff_labour_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_labour: tariff_labour
  customer_company: customer_company
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

type tariff_labour {
  guid: String!
  description: String
  cost: Float
  remarks: String
  package_labour(where: package_labourFilterInput): [package_labour]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input ListFilterInputTypeOfpackage_labourFilterInput {
  all: package_labourFilterInput
  none: package_labourFilterInput
  some: package_labourFilterInput
  any: Boolean
}

input customer_company_cleaning_categoryFilterInput {
  and: [customer_company_cleaning_categoryFilterInput!]
  or: [customer_company_cleaning_categoryFilterInput!]
  guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  cleaning_category_guid: StringOperationFilterInput
  initial_price: FloatOperationFilterInput
  adjusted_price: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  customer_company: customer_companyFilterInput
  cleaning_category: cleaning_categoryFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input customer_company_cleaning_categoryInput {
  guid: String
  customer_company_guid: String
  cleaning_category_guid: String
  initial_price: Float
  adjusted_price: Float
  remarks: String
  customer_company: customer_companyInput
  cleaning_category: cleaning_categoryInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input customer_company_cleaning_categorySortInput {
  guid: SortEnumType
  customer_company_guid: SortEnumType
  cleaning_category_guid: SortEnumType
  initial_price: SortEnumType
  adjusted_price: SortEnumType
  remarks: SortEnumType
  customer_company: customer_companySortInput
  cleaning_category: cleaning_categorySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input package_bufferSortInput {
  guid: SortEnumType
  tariff_buffer_guid: SortEnumType
  customer_company_guid: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  tariff_buffer: tariff_bufferSortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input package_depotSortInput {
  guid: SortEnumType
  customer_company_guid: SortEnumType
  tariff_depot_guid: SortEnumType
  remarks: SortEnumType
  preinspection_cost: SortEnumType
  lolo_cost: SortEnumType
  storage_cost: SortEnumType
  gate_in_cost: SortEnumType
  gate_out_cost: SortEnumType
  free_storage: SortEnumType
  storage_cal_cv: SortEnumType
  tariff_depot: tariff_depotSortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input package_labourFilterInput {
  and: [package_labourFilterInput!]
  or: [package_labourFilterInput!]
  guid: StringOperationFilterInput
  tariff_labour_guid: StringOperationFilterInput
  customer_company_guid: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  tariff_labour: tariff_labourFilterInput
  customer_company: customer_companyFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input package_labourInput {
  guid: String!
  tariff_labour_guid: String
  customer_company_guid: String
  cost: Float
  remarks: String
  tariff_labour: tariff_labourInput
  customer_company: customer_companyInput
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input package_labourSortInput {
  guid: SortEnumType
  tariff_labour_guid: SortEnumType
  customer_company_guid: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  tariff_labour: tariff_labourSortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input package_repairSortInput {
  guid: SortEnumType
  tariff_repair_guid: SortEnumType
  customer_company_guid: SortEnumType
  material_cost: SortEnumType
  labour_hour: SortEnumType
  remarks: SortEnumType
  tariff_repair: tariff_repairSortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input package_residueSortInput {
  guid: SortEnumType
  tariff_residue_guid: SortEnumType
  customer_company_guid: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  tariff_residue: tariff_residueSortInput
  customer_company: customer_companySortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_labourFilterInput {
  and: [tariff_labourFilterInput!]
  or: [tariff_labourFilterInput!]
  guid: StringOperationFilterInput
  description: StringOperationFilterInput
  cost: FloatOperationFilterInput
  remarks: StringOperationFilterInput
  package_labour: ListFilterInputTypeOfpackage_labourFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input tariff_labourInput {
  guid: String!
  description: String
  cost: Float
  remarks: String
  package_labour: [package_labourInput]
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input tariff_labourSortInput {
  guid: SortEnumType
  description: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_repairSortInput {
  guid: SortEnumType
  group_name_cv: SortEnumType
  subgroup_name_cv: SortEnumType
  part_name: SortEnumType
  alias: SortEnumType
  dimension: SortEnumType
  height_diameter: SortEnumType
  height_diameter_unit_cv: SortEnumType
  width_diameter: SortEnumType
  width_diameter_unit_cv: SortEnumType
  thickness: SortEnumType
  thickness_unit_cv: SortEnumType
  length: SortEnumType
  length_unit_cv: SortEnumType
  labour_hour: SortEnumType
  material_cost: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input tariff_residueSortInput {
  guid: SortEnumType
  description: SortEnumType
  cost: SortEnumType
  remarks: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

"""A connection to a list of items."""
type QueryCleaningCategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCleaningCategoryEdge!]

  """A flattened list of the nodes."""
  nodes: [cleaning_category]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCleaningCategoryEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: cleaning_category
}

"""A connection to a list of items."""
type QueryCleaningMethodConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCleaningMethodEdge!]

  """A flattened list of the nodes."""
  nodes: [cleaning_method]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCleaningMethodEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: cleaning_method
}

"""A connection to a list of items."""
type QueryCleaningConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryCleaningEdge!]

  """A flattened list of the nodes."""
  nodes: [cleaning!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryCleaningEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: cleaning!
}

"""A connection to a list of items."""
type QueryJobOrderConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryJobOrderEdge!]

  """A flattened list of the nodes."""
  nodes: [job_order!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryJobOrderEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: job_order!
}

"""A connection to a list of items."""
type QueryRepairConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryRepairEdge!]

  """A flattened list of the nodes."""
  nodes: [repair!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryRepairEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: repair!
}

"""A connection to a list of items."""
type QueryResidueConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryResidueEdge!]

  """A flattened list of the nodes."""
  nodes: [residue!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryResidueEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: residue!
}

"""A connection to a list of items."""
type QuerySteamingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySteamingEdge!]

  """A flattened list of the nodes."""
  nodes: [steaming!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySteamingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: steaming!
}

"""A connection to a list of items."""
type QuerySteamingTempConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySteamingTempEdge!]

  """A flattened list of the nodes."""
  nodes: [steaming_temp!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySteamingTempEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: steaming_temp!
}

"""A connection to a list of items."""
type QueryTeamsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTeamsEdge!]

  """A flattened list of the nodes."""
  nodes: [team!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTeamsEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: team!
}

"""A connection to a list of items."""
type QueryUsersConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryUsersEdge!]

  """A flattened list of the nodes."""
  nodes: [aspnetusers!]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryUsersEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: aspnetusers!
}

input CleaningJobOrderInput {
  guid: String!
  sot_guid: String
  sot_status: String
  remarks: String
  job_order: [job_orderInput]
}

input JobOrderRequestInput {
  guid: String
  sot_guid: String!
  team_guid: String!
  working_hour: Float
  total_hour: Float!
  job_type_cv: String!
  process_guid: String
  status_cv: String
  remarks: String
  part_guid: [String]
}

input RepJobOrderRequestInput {
  guid: String!
  sot_guid: String!
  sot_status: String
  estimate_no: String
  remarks: String
  job_order: [job_orderInput]
}

input RepairPartRequestInput {
  guid: String!
  approve_part: Boolean!
}

input RepairRequestInput {
  guid: String!
  sot_guid: String
  estimate_no: String
  remarks: String!
  customer_guid: String!
  is_approved: Boolean!
}

input RepairStatusRequestInput {
  guid: String!
  sot_guid: String!
  remarks: String
  action: String!
  repairPartRequests: [RepairPartRequestInput]
}

input ResJobOrderRequestInput {
  guid: String!
  sot_guid: String
  sot_status: String
  estimate_no: String
  remarks: String
  job_order: [job_orderInput]
}

input ResiduePartRequestInput {
  guid: String!
  approve_part: Boolean!
}

input ResidueRequestInput {
  guid: String!
  sot_guid: String
  estimate_no: String
  remarks: String!
  customer_guid: String!
  is_approved: Boolean!
}

input ResidueStatusRequestInput {
  guid: String!
  sot_guid: String!
  remarks: String
  action: String!
  residuePartRequests: [ResiduePartRequestInput]
}

input SteamJobOrderRequestInput {
  guid: String!
  sot_guid: String
  sot_status: String
  remarks: String
  job_order: [job_orderInput]
}

input SteamingPartRequestInput {
  guid: String!
  approve_part: Boolean!
}

input SteamingRequestInput {
  guid: String!
  sot_guid: String
  estimate_no: String
  remarks: String!
  customer_guid: String!
  is_approved: Boolean!
}

input SteamingStatusRequestInput {
  guid: String!
  sot_guid: String!
  remarks: String
  action: String!
  steamingPartRequests: [SteamingPartRequestInput]
}

input UpdateJobOrderRequestInput {
  guid: String!
  remarks: String
  start_dt: Long
  complete_dt: Long
}

input aspnetusersSortInput {
  id: SortEnumType
  corporateID: SortEnumType
  userName: SortEnumType
  email: SortEnumType
  phoneNumber: SortEnumType
}

input cleaningSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  bill_to_guid: SortEnumType
  job_order_guid: SortEnumType
  cleaning_cost: SortEnumType
  buffer_cost: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  job_no: SortEnumType
  approve_by: SortEnumType
  approve_dt: SortEnumType
  allocate_by: SortEnumType
  allocate_dt: SortEnumType
  complete_by: SortEnumType
  complete_dt: SortEnumType
  na_dt: SortEnumType
  customer_billing_guid: SortEnumType
  owner_billing_guid: SortEnumType
  action: SortEnumType
  storing_order_tank: storing_order_tankSortInput
  customer_company: customer_companySortInput
  job_order: job_orderSortInput
  customer_billing: billingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input repairSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  aspnetusers_guid: SortEnumType
  estimate_no: SortEnumType
  labour_cost_discount: SortEnumType
  material_cost_discount: SortEnumType
  labour_cost: SortEnumType
  total_cost: SortEnumType
  remarks: SortEnumType
  owner_enable: SortEnumType
  status_cv: SortEnumType
  job_no: SortEnumType
  total_hour: SortEnumType
  complete_dt: SortEnumType
  na_dt: SortEnumType
  approve_by: SortEnumType
  approve_dt: SortEnumType
  allocate_by: SortEnumType
  allocate_dt: SortEnumType
  bill_to_guid: SortEnumType
  customer_billing_guid: SortEnumType
  owner_billing_guid: SortEnumType
  customer_company: customer_companySortInput
  storing_order_tank: storing_order_tankSortInput
  aspnetsuser: aspnetusersSortInput
  customer_billing: billingSortInput
  owner_billing: billingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

input residueSortInput {
  guid: SortEnumType
  sot_guid: SortEnumType
  bill_to_guid: SortEnumType
  status_cv: SortEnumType
  remarks: SortEnumType
  job_no: SortEnumType
  approve_by: SortEnumType
  approve_dt: SortEnumType
  allocate_by: SortEnumType
  allocate_dt: SortEnumType
  complete_by: SortEnumType
  complete_dt: SortEnumType
  na_dt: SortEnumType
  estimate_no: SortEnumType
  customer_billing_guid: SortEnumType
  owner_billing_guid: SortEnumType
  customer_company: customer_companySortInput
  storing_order_tank: storing_order_tankSortInput
  customer_billing: billingSortInput
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

type LengthWithUnit {
  length: Float
  length_unit_cv: String
}

"""A connection to a list of items."""
type QuerySteamingExclusiveConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QuerySteamingExclusiveEdge!]

  """A flattened list of the nodes."""
  nodes: [steaming_exclusive]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QuerySteamingExclusiveEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: steaming_exclusive
}

"""A connection to a list of items."""
type QueryTariffBufferConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffBufferEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_buffer]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffBufferEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_buffer
}

"""A connection to a list of items."""
type QueryTariffCleaningConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffCleaningEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_cleaning]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffCleaningEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_cleaning
}

"""A connection to a list of items."""
type QueryTariffDepotConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffDepotEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_depot]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffDepotEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_depot
}

"""A connection to a list of items."""
type QueryTariffLabourConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffLabourEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_labour]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffLabourEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_labour
}

"""A connection to a list of items."""
type QueryTariffRepairConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffRepairEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_repair]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffRepairEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_repair
}

"""A connection to a list of items."""
type QueryTariffResidueConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffResidueEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_residue]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffResidueEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_residue
}

"""A connection to a list of items."""
type QueryTariffSteamingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [QueryTariffSteamingEdge!]

  """A flattened list of the nodes."""
  nodes: [tariff_steaming]

  """Identifies the total count of items in the connection."""
  totalCount: Int!
}

"""An edge in a connection."""
type QueryTariffSteamingEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: tariff_steaming
}

type un_number {
  guid: String
  un_no: String!
  class: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input un_numberFilterInput {
  and: [un_numberFilterInput!]
  or: [un_numberFilterInput!]
  guid: StringOperationFilterInput
  un_no: StringOperationFilterInput
  class: StringOperationFilterInput
  delete_dt: LongOperationFilterInput
  create_dt: LongOperationFilterInput
  update_dt: LongOperationFilterInput
  create_by: StringOperationFilterInput
  update_by: StringOperationFilterInput
}

input un_numberInput {
  guid: String
  un_no: String!
  class: String
  delete_dt: Long
  create_dt: Long
  update_dt: Long
  create_by: String
  update_by: String
}

input un_numberSortInput {
  guid: SortEnumType
  un_no: SortEnumType
  class: SortEnumType
  delete_dt: SortEnumType
  create_dt: SortEnumType
  update_dt: SortEnumType
  create_by: SortEnumType
  update_by: SortEnumType
}

"""
The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long