schema {
  query: Query
  subscription: Subscription
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type Product {
  reviews: [Review!]!
  upc: Int!
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
  reviews: [Review!]!
  reviewById(id: ID!): Review
  reviewsById(ids: [ID!]!): [Review!]!
  userById(id: ID!): User!
  productById(id: ID!): Product!
}

type Review implements Node {
  id: ID!
  user: User!
  product: Product!
  body: String!
}

type Subscription {
  onNewReview: Review!
}

type User {
  reviews: [Review!]!
  id: Int!
  name: String!
}